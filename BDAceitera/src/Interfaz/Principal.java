/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Clases.*;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import rojeru_san.componentes.RSDateChooser;
import rojerusan.RSComboMetro;
import rojerusan.RSNotifyAnimated;
import rojerusan.RSPanelsSlider;
import rojerusan.RSTableMetro;

/**
 *
 * @author mynor
 */
public class Principal extends javax.swing.JInternalFrame {

    /**
     * Creates new form Principal
     */
    String id = "";
    
    public Principal() {
        inventario = new Inventario();
        compras = new Compras();
        proveedor = new Proveedor();
        producto = new Producto();
        venta = new Ventas();
        user = new Usuario();
        Datos = new ArrayList<>();
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        this.setBorder(new EmptyBorder(0, 0, 0, 0));
        initComponents();
        cmbInventarioMarca.setModel(inventario.getMarca((DefaultComboBoxModel) cmbInventarioMarca.getModel()));
        cmbInventarioPresentacion.setModel(inventario.getPresentacion((DefaultComboBoxModel) cmbInventarioPresentacion.getModel()));
        cmbInventarioTProd.setModel(inventario.getTProd((DefaultComboBoxModel) cmbInventarioTProd.getModel()));
        TBInventario.setModel(inventario.getInventario("", "", "", "", TBInventario));
        cmbMarca.setModel(inventario.getMarca((DefaultComboBoxModel) cmbMarca.getModel()));
        cmbPresentacionCompra.setModel(inventario.getPresentacion((DefaultComboBoxModel) cmbPresentacionCompra.getModel()));
        cmbProveedor.setModel(compras.getProveedor((DefaultComboBoxModel) cmbProveedor.getModel()));
        cmbTProducto.setModel(inventario.getTProd((DefaultComboBoxModel) cmbTProducto.getModel()));
        btnComprar.setEnabled(false);
        btnRegresarInvenrtario1.setVisible(false);
    }
    
    public void setButtons(boolean admin) {
        if (!admin) {
            this.btnVerVentas.setVisible(false);
            this.btnRealizarCompras.setVisible(false);
            this.btnVerCompras.setVisible(false);
            this.btnNuevoProveedor.setVisible(false);
            this.btnVerProveedor.setVisible(false);
            this.btnAddUser.setVisible(false);
            this.MIAddCompra.setVisible(false);
            this.MIRegresarCompras.setVisible(false);
            this.btnVerUsuarios.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PMVerVentas = new javax.swing.JPopupMenu();
        MnOpcionesVentas = new javax.swing.JMenu();
        MIDetVenta = new javax.swing.JMenuItem();
        PMVerCompras = new javax.swing.JPopupMenu();
        MnOpcionesCompras = new javax.swing.JMenu();
        MIDetCompras = new javax.swing.JMenuItem();
        PMInventario = new javax.swing.JPopupMenu();
        MnAgregarInventario = new javax.swing.JMenu();
        MIAddVenta = new javax.swing.JMenuItem();
        MIAddCompra = new javax.swing.JMenuItem();
        MnRegresarInventario = new javax.swing.JMenu();
        MIRegresarVenta = new javax.swing.JMenuItem();
        MIRegresarCompras = new javax.swing.JMenuItem();
        PMCompras = new javax.swing.JPopupMenu();
        MnOpcionesRCompras = new javax.swing.JMenu();
        MIEliminar = new javax.swing.JMenuItem();
        PMVerUsuario = new javax.swing.JPopupMenu();
        MnOpcionesUsuario = new javax.swing.JMenu();
        MIEditarUsuario = new javax.swing.JMenuItem();
        PMVentas = new javax.swing.JPopupMenu();
        MnVentas = new javax.swing.JMenu();
        MIModificarCantidad = new javax.swing.JMenuItem();
        MIEliminarDeVentas = new javax.swing.JMenuItem();
        txtCantidadVenta = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        PnlControl = new javax.swing.JPanel();
        lbltitulo = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        btnAddUser = new javax.swing.JButton();
        btnVerVentas = new javax.swing.JButton();
        btnVerCompras = new javax.swing.JButton();
        btnRealizarCompras = new javax.swing.JButton();
        btnNuevoProveedor = new javax.swing.JButton();
        btnVerProveedor = new javax.swing.JButton();
        btnVerUsuarios = new javax.swing.JButton();
        rSPanelsSlider1 = new rojerusan.RSPanelsSlider();
        pnlInventario = new javax.swing.JPanel();
        txtCodigoInventario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBInventario = new rojerusan.RSTableMetro();
        jLabel1 = new javax.swing.JLabel();
        cmbInventarioPresentacion = new rojerusan.RSComboMetro();
        jLabel3 = new javax.swing.JLabel();
        lbltitulo2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbInventarioMarca = new rojerusan.RSComboMetro();
        cmbInventarioTProd = new rojerusan.RSComboMetro();
        jLabel4 = new javax.swing.JLabel();
        pnlRealizarVentas = new javax.swing.JPanel();
        btnVender = new javax.swing.JButton();
        btnNuevaVenta = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TBVentas = new rojerusan.RSTableMetro();
        lbltitulo4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTotalVenta = new javax.swing.JTextField();
        txtMontoVenta = new javax.swing.JTextField();
        txtVueltoVenta = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblFecha = new rojeru_san.RSLabelFecha();
        btnRegresarInventario = new javax.swing.JButton();
        pnlVerVentas = new javax.swing.JPanel();
        lbltitulo1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TBVerVentas = new rojerusan.RSTableMetro();
        txtNoVenta = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        DCFechaVenta = new rojeru_san.componentes.RSDateChooser();
        jLabel15 = new javax.swing.JLabel();
        btnBuscarVentas = new javax.swing.JButton();
        pnlDetalleVentas = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TBDetalleVenta = new rojerusan.RSTableMetro();
        lbltitulo3 = new javax.swing.JLabel();
        btnRegresarVentas = new javax.swing.JButton();
        lblTotalDVentas = new javax.swing.JLabel();
        lblFechaDVentas = new javax.swing.JLabel();
        lblVentano = new javax.swing.JLabel();
        pnlRealizarCompras = new javax.swing.JPanel();
        btnRegresarInvenrtario1 = new javax.swing.JButton();
        lbltitulo5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TBComprar = new rojerusan.RSTableMetro();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtCodigoCompras = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtDetallePres = new javax.swing.JTextField();
        txtCosto = new javax.swing.JTextField();
        txtTotalCompra = new javax.swing.JTextField();
        txtMontoCompra = new javax.swing.JTextField();
        btnVueltoCompra = new javax.swing.JTextField();
        cmbPresentacionCompra = new rojerusan.RSComboMetro();
        cmbMarca = new rojerusan.RSComboMetro();
        cmbTProducto = new rojerusan.RSComboMetro();
        cmbProveedor = new rojerusan.RSComboMetro();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnNuevaCompra = new javax.swing.JButton();
        btnComprar = new javax.swing.JButton();
        pnlVerCompras = new javax.swing.JPanel();
        btnBuscarCompras = new javax.swing.JButton();
        lbltitulo6 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TBVerCompras = new rojerusan.RSTableMetro();
        txtNoCompra = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        DCFechaCompras = new rojeru_san.componentes.RSDateChooser();
        jLabel30 = new javax.swing.JLabel();
        pnlDetalleCompras = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TBDetalleCompra = new rojerusan.RSTableMetro();
        lbltitulo7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblTotalDCompras = new javax.swing.JLabel();
        lblFechaDCompras = new javax.swing.JLabel();
        lblCompraNo = new javax.swing.JLabel();
        pnlNuevoProveedor = new javax.swing.JPanel();
        lbltitulo8 = new javax.swing.JLabel();
        lblInfoProv = new javax.swing.JLabel();
        btnInsertarProveedor = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txtNoTelefonoD = new javax.swing.JTextField();
        txtNombreEmpresa = new javax.swing.JTextField();
        txtNombreDistri = new javax.swing.JTextField();
        txtNotelefonoE = new javax.swing.JTextField();
        pnlVerProv = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        TBVerProveedor = new rojerusan.RSTableMetro();
        lbltitulo9 = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtDistribuidor = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        pnlVerUsuarios = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBVerUsuarios = new rojerusan.RSTableMetro();
        lbltitulo10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();

        PMVerVentas.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N

        MnOpcionesVentas.setBackground(new java.awt.Color(0, 51, 51));
        MnOpcionesVentas.setForeground(new java.awt.Color(255, 255, 255));
        MnOpcionesVentas.setText("Opciones");
        MnOpcionesVentas.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MnOpcionesVentas.setOpaque(true);

        MIDetVenta.setBackground(new java.awt.Color(0, 51, 51));
        MIDetVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIDetVenta.setForeground(new java.awt.Color(255, 255, 255));
        MIDetVenta.setText("Ver Detalle de la venta");
        MIDetVenta.setOpaque(true);
        MIDetVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIDetVentaActionPerformed(evt);
            }
        });
        MnOpcionesVentas.add(MIDetVenta);

        PMVerVentas.add(MnOpcionesVentas);

        PMVerCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N

        MnOpcionesCompras.setBackground(new java.awt.Color(0, 51, 51));
        MnOpcionesCompras.setForeground(new java.awt.Color(255, 255, 255));
        MnOpcionesCompras.setText("Opciones");
        MnOpcionesCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MnOpcionesCompras.setOpaque(true);

        MIDetCompras.setBackground(new java.awt.Color(0, 51, 51));
        MIDetCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIDetCompras.setForeground(new java.awt.Color(255, 255, 255));
        MIDetCompras.setText("Ver detalle de la compra");
        MIDetCompras.setOpaque(true);
        MIDetCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIDetComprasActionPerformed(evt);
            }
        });
        MnOpcionesCompras.add(MIDetCompras);

        PMVerCompras.add(MnOpcionesCompras);

        PMInventario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N

        MnAgregarInventario.setBackground(new java.awt.Color(0, 51, 51));
        MnAgregarInventario.setForeground(new java.awt.Color(255, 255, 255));
        MnAgregarInventario.setText("Agregar a");
        MnAgregarInventario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MnAgregarInventario.setOpaque(true);

        MIAddVenta.setBackground(new java.awt.Color(0, 51, 51));
        MIAddVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIAddVenta.setForeground(new java.awt.Color(255, 255, 255));
        MIAddVenta.setText("Ventas");
        MIAddVenta.setOpaque(true);
        MIAddVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIAddVentaActionPerformed(evt);
            }
        });
        MnAgregarInventario.add(MIAddVenta);

        MIAddCompra.setBackground(new java.awt.Color(0, 51, 51));
        MIAddCompra.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIAddCompra.setForeground(new java.awt.Color(255, 255, 255));
        MIAddCompra.setText("Compras");
        MIAddCompra.setOpaque(true);
        MIAddCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIAddCompraActionPerformed(evt);
            }
        });
        MnAgregarInventario.add(MIAddCompra);

        PMInventario.add(MnAgregarInventario);

        MnRegresarInventario.setBackground(new java.awt.Color(0, 51, 51));
        MnRegresarInventario.setForeground(new java.awt.Color(255, 255, 255));
        MnRegresarInventario.setText("Regresar a");
        MnRegresarInventario.setContentAreaFilled(false);
        MnRegresarInventario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MnRegresarInventario.setOpaque(true);

        MIRegresarVenta.setBackground(new java.awt.Color(0, 51, 51));
        MIRegresarVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIRegresarVenta.setForeground(new java.awt.Color(255, 255, 255));
        MIRegresarVenta.setText("Ventas");
        MIRegresarVenta.setContentAreaFilled(false);
        MIRegresarVenta.setEnabled(false);
        MIRegresarVenta.setOpaque(true);
        MIRegresarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIRegresarVentaActionPerformed(evt);
            }
        });
        MnRegresarInventario.add(MIRegresarVenta);

        MIRegresarCompras.setBackground(new java.awt.Color(0, 51, 51));
        MIRegresarCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIRegresarCompras.setForeground(new java.awt.Color(255, 255, 255));
        MIRegresarCompras.setText("Compras");
        MIRegresarCompras.setContentAreaFilled(false);
        MIRegresarCompras.setEnabled(false);
        MIRegresarCompras.setOpaque(true);
        MIRegresarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIRegresarComprasActionPerformed(evt);
            }
        });
        MnRegresarInventario.add(MIRegresarCompras);

        PMInventario.add(MnRegresarInventario);

        PMCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N

        MnOpcionesRCompras.setBackground(new java.awt.Color(0, 51, 51));
        MnOpcionesRCompras.setForeground(new java.awt.Color(255, 255, 255));
        MnOpcionesRCompras.setText("Opciones");
        MnOpcionesRCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MnOpcionesRCompras.setOpaque(true);

        MIEliminar.setBackground(new java.awt.Color(0, 51, 51));
        MIEliminar.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIEliminar.setForeground(new java.awt.Color(255, 255, 255));
        MIEliminar.setText("Eliminar");
        MIEliminar.setOpaque(true);
        MIEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIEliminarActionPerformed(evt);
            }
        });
        MnOpcionesRCompras.add(MIEliminar);

        PMCompras.add(MnOpcionesRCompras);

        PMVerUsuario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N

        MnOpcionesUsuario.setBackground(new java.awt.Color(0, 51, 51));
        MnOpcionesUsuario.setForeground(new java.awt.Color(255, 255, 255));
        MnOpcionesUsuario.setText("Opciones");
        MnOpcionesUsuario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MnOpcionesUsuario.setOpaque(true);

        MIEditarUsuario.setBackground(new java.awt.Color(0, 51, 51));
        MIEditarUsuario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIEditarUsuario.setForeground(new java.awt.Color(255, 255, 255));
        MIEditarUsuario.setText("Editar Usuario");
        MIEditarUsuario.setOpaque(true);
        MIEditarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIEditarUsuarioActionPerformed(evt);
            }
        });
        MnOpcionesUsuario.add(MIEditarUsuario);

        PMVerUsuario.add(MnOpcionesUsuario);

        PMVentas.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N

        MnVentas.setBackground(new java.awt.Color(0, 51, 51));
        MnVentas.setForeground(new java.awt.Color(255, 255, 255));
        MnVentas.setText("Opciones");
        MnVentas.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MnVentas.setOpaque(true);

        MIModificarCantidad.setBackground(new java.awt.Color(0, 51, 51));
        MIModificarCantidad.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIModificarCantidad.setForeground(new java.awt.Color(255, 255, 255));
        MIModificarCantidad.setText("Cambiar cantidad");
        MIModificarCantidad.setOpaque(true);
        MIModificarCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIModificarCantidadActionPerformed(evt);
            }
        });
        MnVentas.add(MIModificarCantidad);

        MIEliminarDeVentas.setBackground(new java.awt.Color(0, 51, 51));
        MIEliminarDeVentas.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        MIEliminarDeVentas.setForeground(new java.awt.Color(255, 255, 255));
        MIEliminarDeVentas.setText("Eliminar producto");
        MIEliminarDeVentas.setOpaque(true);
        MIEliminarDeVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIEliminarDeVentasActionPerformed(evt);
            }
        });
        MnVentas.add(MIEliminarDeVentas);

        PMVentas.add(MnVentas);

        txtCantidadVenta.setBackground(new java.awt.Color(0, 51, 51));
        txtCantidadVenta.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        txtCantidadVenta.setForeground(new java.awt.Color(255, 255, 255));
        txtCantidadVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadVentaKeyTyped(evt);
            }
        });

        setPreferredSize(new java.awt.Dimension(1100, 640));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PnlControl.setBackground(new java.awt.Color(0, 51, 51));
        PnlControl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        PnlControl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbltitulo.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo.setForeground(new java.awt.Color(255, 255, 255));
        lbltitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo.setText("Aceitera de occidente");
        PnlControl.add(lbltitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 300, 50));

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Home.png"))); // NOI18N
        btnHome.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Inventario</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnHome.setBorderPainted(false);
        btnHome.setContentAreaFilled(false);
        btnHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHome.setSelected(true);
        btnHome.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Home Select.png"))); // NOI18N
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        PnlControl.add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 50));

        btnAddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add user.png"))); // NOI18N
        btnAddUser.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Agregar Nuevo Usuario</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnAddUser.setBorderPainted(false);
        btnAddUser.setContentAreaFilled(false);
        btnAddUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddUser.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add user Select.png"))); // NOI18N
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });
        PnlControl.add(btnAddUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 0, 70, 50));

        btnVerVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/VerVentas.png"))); // NOI18N
        btnVerVentas.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Ver ventas realizadas</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnVerVentas.setBorderPainted(false);
        btnVerVentas.setContentAreaFilled(false);
        btnVerVentas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerVentas.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/VerVentas Select.png"))); // NOI18N
        btnVerVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerVentasActionPerformed(evt);
            }
        });
        PnlControl.add(btnVerVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 70, 50));

        btnVerCompras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/VerVentas.png"))); // NOI18N
        btnVerCompras.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Ver Compras Realizadas</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnVerCompras.setBorderPainted(false);
        btnVerCompras.setContentAreaFilled(false);
        btnVerCompras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerCompras.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/VerVentas Select.png"))); // NOI18N
        btnVerCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerComprasActionPerformed(evt);
            }
        });
        PnlControl.add(btnVerCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 70, 50));

        btnRealizarCompras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/venta.png"))); // NOI18N
        btnRealizarCompras.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Realizar Compras</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnRealizarCompras.setBorderPainted(false);
        btnRealizarCompras.setContentAreaFilled(false);
        btnRealizarCompras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRealizarCompras.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Venta Select.png"))); // NOI18N
        btnRealizarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarComprasActionPerformed(evt);
            }
        });
        PnlControl.add(btnRealizarCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 70, 50));

        btnNuevoProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add user.png"))); // NOI18N
        btnNuevoProveedor.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Agregar Nuevo Proveedor</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnNuevoProveedor.setBorderPainted(false);
        btnNuevoProveedor.setContentAreaFilled(false);
        btnNuevoProveedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevoProveedor.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add user Select.png"))); // NOI18N
        btnNuevoProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoProveedorActionPerformed(evt);
            }
        });
        PnlControl.add(btnNuevoProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 70, 50));

        btnVerProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Proveedores.png"))); // NOI18N
        btnVerProveedor.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Ver Proveedores</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnVerProveedor.setBorderPainted(false);
        btnVerProveedor.setContentAreaFilled(false);
        btnVerProveedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerProveedor.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Proveedores Select.png"))); // NOI18N
        btnVerProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerProveedorActionPerformed(evt);
            }
        });
        PnlControl.add(btnVerProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 70, 50));

        btnVerUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ver usuarios.png"))); // NOI18N
        btnVerUsuarios.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Ver Usuarios</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnVerUsuarios.setContentAreaFilled(false);
        btnVerUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerUsuarios.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ver usuarios select.png"))); // NOI18N
        btnVerUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerUsuariosActionPerformed(evt);
            }
        });
        PnlControl.add(btnVerUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 0, -1, -1));

        jPanel1.add(PnlControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 50));

        rSPanelsSlider1.setBackground(new java.awt.Color(255, 255, 255));

        pnlInventario.setBackground(new java.awt.Color(255, 255, 255));
        pnlInventario.setName("pnlInventario"); // NOI18N
        pnlInventario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCodigoInventario.setBackground(new java.awt.Color(0, 51, 51));
        txtCodigoInventario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtCodigoInventario.setForeground(new java.awt.Color(255, 255, 255));
        txtCodigoInventario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoInventarioKeyPressed(evt);
            }
        });
        pnlInventario.add(txtCodigoInventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 390, -1));

        jScrollPane1.setBackground(new java.awt.Color(0, 51, 51));
        jScrollPane1.setFont(new java.awt.Font("Yu Gothic", 2, 24)); // NOI18N

        TBInventario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Producto", "Código", "Marca", "Detalle", "Cantidad", "Precio", "Proveedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBInventario.setAltoHead(40);
        TBInventario.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBInventario.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBInventario.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBInventario.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBInventario.setComponentPopupMenu(PMInventario);
        TBInventario.setFont(new java.awt.Font("Yu Gothic UI", 3, 18)); // NOI18N
        TBInventario.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBInventario.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        TBInventario.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBInventario.setOpaque(false);
        TBInventario.setRowHeight(25);
        jScrollPane1.setViewportView(TBInventario);

        pnlInventario.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1190, 430));

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Marca:");
        pnlInventario.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 90, 40));

        cmbInventarioPresentacion.setMaximumRowCount(4);
        cmbInventarioPresentacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ver Todo" }));
        cmbInventarioPresentacion.setColorArrow(new java.awt.Color(0, 51, 51));
        cmbInventarioPresentacion.setColorBorde(new java.awt.Color(0, 51, 51));
        cmbInventarioPresentacion.setColorFondo(new java.awt.Color(0, 51, 51));
        cmbInventarioPresentacion.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        cmbInventarioPresentacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInventarioPresentacionActionPerformed(evt);
            }
        });
        pnlInventario.add(cmbInventarioPresentacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 60, 390, -1));

        jLabel3.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 51));
        jLabel3.setText("Código:");
        pnlInventario.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 90, 40));

        lbltitulo2.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo2.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo2.setText("Inventario");
        pnlInventario.add(lbltitulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 50));

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("Presentación:");
        pnlInventario.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 160, 40));

        cmbInventarioMarca.setMaximumRowCount(4);
        cmbInventarioMarca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ver Todo" }));
        cmbInventarioMarca.setColorArrow(new java.awt.Color(0, 51, 51));
        cmbInventarioMarca.setColorBorde(new java.awt.Color(0, 51, 51));
        cmbInventarioMarca.setColorFondo(new java.awt.Color(0, 51, 51));
        cmbInventarioMarca.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        cmbInventarioMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInventarioMarcaActionPerformed(evt);
            }
        });
        pnlInventario.add(cmbInventarioMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 390, -1));

        cmbInventarioTProd.setMaximumRowCount(4);
        cmbInventarioTProd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ver Todo" }));
        cmbInventarioTProd.setColorArrow(new java.awt.Color(0, 51, 51));
        cmbInventarioTProd.setColorBorde(new java.awt.Color(0, 51, 51));
        cmbInventarioTProd.setColorFondo(new java.awt.Color(0, 51, 51));
        cmbInventarioTProd.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        cmbInventarioTProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInventarioTProdActionPerformed(evt);
            }
        });
        pnlInventario.add(cmbInventarioTProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 390, -1));

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("Producto:");
        pnlInventario.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 130, 40));

        rSPanelsSlider1.add(pnlInventario, "card1");

        pnlRealizarVentas.setBackground(new java.awt.Color(255, 255, 255));
        pnlRealizarVentas.setName("pnlRealizarVentas"); // NOI18N
        pnlRealizarVentas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Realizar Venta.png"))); // NOI18N
        btnVender.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Finalizar Venta</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnVender.setBorderPainted(false);
        btnVender.setContentAreaFilled(false);
        btnVender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVender.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Realizar Venta Select.png"))); // NOI18N
        btnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenderActionPerformed(evt);
            }
        });
        pnlRealizarVentas.add(btnVender, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 530, 70, 50));

        btnNuevaVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nueva Venta_Compra.png"))); // NOI18N
        btnNuevaVenta.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Cancelar Venta</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnNuevaVenta.setBorderPainted(false);
        btnNuevaVenta.setContentAreaFilled(false);
        btnNuevaVenta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevaVenta.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nueva Venta_Compra Select.png"))); // NOI18N
        btnNuevaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaVentaActionPerformed(evt);
            }
        });
        pnlRealizarVentas.add(btnNuevaVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 530, 70, 50));

        TBVentas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Producto", "Código", "Marca", "Detalle", "Cantidad", "Precio", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBVentas.setAltoHead(40);
        TBVentas.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBVentas.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBVentas.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBVentas.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBVentas.setComponentPopupMenu(PMVentas);
        TBVentas.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBVentas.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVentas.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        TBVentas.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVentas.setMultipleSeleccion(false);
        TBVentas.setRowHeight(25);
        jScrollPane4.setViewportView(TBVentas);

        pnlRealizarVentas.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1190, 380));

        lbltitulo4.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo4.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo4.setText("Realizar ventas");
        pnlRealizarVentas.add(lbltitulo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1180, 40));

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setText("Fecha:");
        pnlRealizarVentas.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 60, 40));

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 51));
        jLabel10.setText("Monto:");
        pnlRealizarVentas.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 490, 80, -1));

        txtTotalVenta.setEditable(false);
        txtTotalVenta.setBackground(new java.awt.Color(0, 51, 51));
        txtTotalVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtTotalVenta.setForeground(new java.awt.Color(255, 255, 255));
        pnlRealizarVentas.add(txtTotalVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 480, 260, -1));

        txtMontoVenta.setBackground(new java.awt.Color(0, 51, 51));
        txtMontoVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtMontoVenta.setForeground(new java.awt.Color(255, 255, 255));
        txtMontoVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMontoVentaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoVentaKeyTyped(evt);
            }
        });
        pnlRealizarVentas.add(txtMontoVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 480, 260, -1));

        txtVueltoVenta.setEditable(false);
        txtVueltoVenta.setBackground(new java.awt.Color(0, 51, 51));
        txtVueltoVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtVueltoVenta.setForeground(new java.awt.Color(255, 255, 255));
        pnlRealizarVentas.add(txtVueltoVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 480, 260, -1));

        jLabel13.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 51));
        jLabel13.setText("Total a pagar:");
        pnlRealizarVentas.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 160, -1));

        jLabel12.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 51));
        jLabel12.setText("Vuelto:");
        pnlRealizarVentas.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 490, 90, -1));

        lblFecha.setForeground(new java.awt.Color(0, 51, 51));
        lblFecha.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        pnlRealizarVentas.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 110, 40));

        btnRegresarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.png"))); // NOI18N
        btnRegresarInventario.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Agregar más</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnRegresarInventario.setBorderPainted(false);
        btnRegresarInventario.setContentAreaFilled(false);
        btnRegresarInventario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresarInventario.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras select.png"))); // NOI18N
        btnRegresarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarInventarioActionPerformed(evt);
            }
        });
        pnlRealizarVentas.add(btnRegresarInventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 40, -1, -1));

        rSPanelsSlider1.add(pnlRealizarVentas, "card2");

        pnlVerVentas.setBackground(new java.awt.Color(255, 255, 255));
        pnlVerVentas.setName("pnlVerVentas"); // NOI18N
        pnlVerVentas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbltitulo1.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo1.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo1.setText("Ventas Realizadas");
        pnlVerVentas.add(lbltitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 40));

        TBVerVentas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBVerVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nombre Vendedor", "Fecha", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBVerVentas.setAltoHead(40);
        TBVerVentas.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBVerVentas.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBVerVentas.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBVerVentas.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBVerVentas.setComponentPopupMenu(PMVerVentas);
        TBVerVentas.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBVerVentas.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerVentas.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei Light", 3, 18)); // NOI18N
        TBVerVentas.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerVentas.setMultipleSeleccion(false);
        TBVerVentas.setRowHeight(25);
        jScrollPane3.setViewportView(TBVerVentas);
        if (TBVerVentas.getColumnModel().getColumnCount() > 0) {
            TBVerVentas.getColumnModel().getColumn(0).setResizable(false);
            TBVerVentas.getColumnModel().getColumn(0).setPreferredWidth(30);
            TBVerVentas.getColumnModel().getColumn(2).setResizable(false);
            TBVerVentas.getColumnModel().getColumn(2).setPreferredWidth(50);
            TBVerVentas.getColumnModel().getColumn(3).setResizable(false);
            TBVerVentas.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        pnlVerVentas.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 1180, 490));

        txtNoVenta.setBackground(new java.awt.Color(0, 51, 51));
        txtNoVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtNoVenta.setForeground(new java.awt.Color(255, 255, 255));
        txtNoVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoVentaKeyPressed(evt);
            }
        });
        pnlVerVentas.add(txtNoVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 290, -1));

        jLabel14.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 51, 51));
        jLabel14.setText("Fecha:");
        pnlVerVentas.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 50, 80, -1));

        DCFechaVenta.setForeground(new java.awt.Color(255, 255, 255));
        DCFechaVenta.setColorBackground(new java.awt.Color(0, 51, 51));
        DCFechaVenta.setColorDiaActual(new java.awt.Color(67, 150, 209));
        DCFechaVenta.setColorForeground(new java.awt.Color(0, 51, 51));
        DCFechaVenta.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        DCFechaVenta.setFuente(new java.awt.Font("Microsoft JhengHei UI Light", 3, 14)); // NOI18N
        DCFechaVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DCFechaVentaMouseClicked(evt);
            }
        });
        pnlVerVentas.add(DCFechaVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 40, 320, -1));

        jLabel15.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 51, 51));
        jLabel15.setText("No Venta:");
        pnlVerVentas.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 120, -1));

        btnBuscarVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscarVentas.setBorderPainted(false);
        btnBuscarVentas.setContentAreaFilled(false);
        btnBuscarVentas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarVentas.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search select.png"))); // NOI18N
        btnBuscarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVentasActionPerformed(evt);
            }
        });
        pnlVerVentas.add(btnBuscarVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 30, -1, -1));

        rSPanelsSlider1.add(pnlVerVentas, "card3");

        pnlDetalleVentas.setBackground(new java.awt.Color(255, 255, 255));
        pnlDetalleVentas.setName("pnl4"); // NOI18N
        pnlDetalleVentas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TBDetalleVenta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBDetalleVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Código", "Marca", "Detalle", "Cantidad", "Precio", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBDetalleVenta.setAltoHead(40);
        TBDetalleVenta.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBDetalleVenta.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBDetalleVenta.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBDetalleVenta.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBDetalleVenta.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBDetalleVenta.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBDetalleVenta.setFuenteFilasSelect(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBDetalleVenta.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBDetalleVenta.setRowHeight(25);
        jScrollPane5.setViewportView(TBDetalleVenta);

        pnlDetalleVentas.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 1170, 490));

        lbltitulo3.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo3.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo3.setText("Detalle de las ventas");
        pnlDetalleVentas.add(lbltitulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 40));

        btnRegresarVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.png"))); // NOI18N
        btnRegresarVentas.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Regresar a Ver ventas realizadas</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnRegresarVentas.setBorderPainted(false);
        btnRegresarVentas.setContentAreaFilled(false);
        btnRegresarVentas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresarVentas.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras select.png"))); // NOI18N
        btnRegresarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarVentasActionPerformed(evt);
            }
        });
        pnlDetalleVentas.add(btnRegresarVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 40, -1, -1));

        lblTotalDVentas.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        lblTotalDVentas.setForeground(new java.awt.Color(0, 51, 51));
        lblTotalDVentas.setText("Total:");
        pnlDetalleVentas.add(lblTotalDVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 270, -1));

        lblFechaDVentas.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        lblFechaDVentas.setForeground(new java.awt.Color(0, 51, 51));
        lblFechaDVentas.setText("Fecha:");
        pnlDetalleVentas.add(lblFechaDVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 210, -1));

        lblVentano.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        lblVentano.setForeground(new java.awt.Color(0, 51, 51));
        lblVentano.setText("Venta no:");
        pnlDetalleVentas.add(lblVentano, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 140, -1));

        rSPanelsSlider1.add(pnlDetalleVentas, "card4");

        pnlRealizarCompras.setBackground(new java.awt.Color(255, 255, 255));
        pnlRealizarCompras.setName("pnlRealizarCompras"); // NOI18N
        pnlRealizarCompras.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRegresarInvenrtario1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.png"))); // NOI18N
        btnRegresarInvenrtario1.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Regresar a Ver ventas realizadas</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnRegresarInvenrtario1.setBorderPainted(false);
        btnRegresarInvenrtario1.setContentAreaFilled(false);
        btnRegresarInvenrtario1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresarInvenrtario1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras select.png"))); // NOI18N
        btnRegresarInvenrtario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarInvenrtario1ActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(btnRegresarInvenrtario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 0, -1, -1));

        lbltitulo5.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo5.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo5.setText("Realizar Compras");
        pnlRealizarCompras.add(lbltitulo5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 50));

        TBComprar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBComprar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Cantidad", "Costo", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBComprar.setAltoHead(40);
        TBComprar.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBComprar.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBComprar.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBComprar.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBComprar.setComponentPopupMenu(PMCompras);
        TBComprar.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBComprar.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBComprar.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        TBComprar.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBComprar.setMultipleSeleccion(false);
        TBComprar.setRowHeight(25);
        TBComprar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBComprarMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(TBComprar);

        pnlRealizarCompras.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 700, 410));

        jLabel18.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 51, 51));
        jLabel18.setText("Detalle de la presentación: ");
        pnlRealizarCompras.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 250, -1));

        jLabel19.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 51, 51));
        jLabel19.setText("Cantidad:");
        pnlRealizarCompras.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 90, -1));

        jLabel21.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 51, 51));
        jLabel21.setText("Precio:");
        pnlRealizarCompras.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 70, -1));

        jLabel23.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 51, 51));
        jLabel23.setText("Código:");
        pnlRealizarCompras.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 80, -1));

        jLabel24.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 51, 51));
        jLabel24.setText("Presentación:");
        pnlRealizarCompras.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 130, -1));

        jLabel25.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 51, 51));
        jLabel25.setText("Marca:");
        pnlRealizarCompras.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 70, -1));

        jLabel26.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 51, 51));
        jLabel26.setText("Tipo Producto:");
        pnlRealizarCompras.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 140, -1));

        jLabel27.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 51, 51));
        jLabel27.setText("Proveedor:");
        pnlRealizarCompras.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 110, -1));

        jLabel28.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 51, 51));
        jLabel28.setText("Costo:");
        pnlRealizarCompras.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 70, -1));

        jLabel17.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 51, 51));
        jLabel17.setText("Total a pagar:");
        pnlRealizarCompras.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 490, 140, -1));

        jLabel20.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 51, 51));
        jLabel20.setText("Monto:");
        pnlRealizarCompras.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 490, 70, -1));

        jLabel22.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 51, 51));
        jLabel22.setText("Vuelto:");
        pnlRealizarCompras.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 490, 70, -1));

        txtCodigoCompras.setBackground(new java.awt.Color(0, 51, 51));
        txtCodigoCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtCodigoCompras.setForeground(new java.awt.Color(255, 255, 255));
        pnlRealizarCompras.add(txtCodigoCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 370, -1));

        txtCantidad.setBackground(new java.awt.Color(0, 51, 51));
        txtCantidad.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtCantidad.setForeground(new java.awt.Color(255, 255, 255));
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });
        pnlRealizarCompras.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 370, -1));

        txtPrecio.setBackground(new java.awt.Color(0, 51, 51));
        txtPrecio.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtPrecio.setForeground(new java.awt.Color(255, 255, 255));
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });
        pnlRealizarCompras.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 370, -1));

        txtDetallePres.setBackground(new java.awt.Color(0, 51, 51));
        txtDetallePres.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtDetallePres.setForeground(new java.awt.Color(255, 255, 255));
        pnlRealizarCompras.add(txtDetallePres, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 330, -1));

        txtCosto.setBackground(new java.awt.Color(0, 51, 51));
        txtCosto.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtCosto.setForeground(new java.awt.Color(255, 255, 255));
        txtCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostoKeyTyped(evt);
            }
        });
        pnlRealizarCompras.add(txtCosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 370, -1));

        txtTotalCompra.setEditable(false);
        txtTotalCompra.setBackground(new java.awt.Color(0, 51, 51));
        txtTotalCompra.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtTotalCompra.setForeground(new java.awt.Color(255, 255, 255));
        pnlRealizarCompras.add(txtTotalCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 480, 170, -1));

        txtMontoCompra.setBackground(new java.awt.Color(0, 51, 51));
        txtMontoCompra.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtMontoCompra.setForeground(new java.awt.Color(255, 255, 255));
        txtMontoCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoCompraKeyTyped(evt);
            }
        });
        pnlRealizarCompras.add(txtMontoCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 480, 180, -1));

        btnVueltoCompra.setEditable(false);
        btnVueltoCompra.setBackground(new java.awt.Color(0, 51, 51));
        btnVueltoCompra.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        btnVueltoCompra.setForeground(new java.awt.Color(255, 255, 255));
        pnlRealizarCompras.add(btnVueltoCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 480, 150, -1));

        cmbPresentacionCompra.setMaximumRowCount(4);
        cmbPresentacionCompra.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escoja una opción", "Agregar" }));
        cmbPresentacionCompra.setColorArrow(new java.awt.Color(0, 51, 51));
        cmbPresentacionCompra.setColorBorde(new java.awt.Color(0, 51, 51));
        cmbPresentacionCompra.setColorFondo(new java.awt.Color(0, 51, 51));
        cmbPresentacionCompra.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        cmbPresentacionCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPresentacionCompraActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(cmbPresentacionCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 320, -1));

        cmbMarca.setMaximumRowCount(4);
        cmbMarca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escoja una opción", "Agregar" }));
        cmbMarca.setColorArrow(new java.awt.Color(0, 51, 51));
        cmbMarca.setColorBorde(new java.awt.Color(0, 51, 51));
        cmbMarca.setColorFondo(new java.awt.Color(0, 51, 51));
        cmbMarca.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        cmbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarcaActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(cmbMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 370, -1));

        cmbTProducto.setMaximumRowCount(4);
        cmbTProducto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escoja una opción", "Agregar" }));
        cmbTProducto.setColorArrow(new java.awt.Color(0, 51, 51));
        cmbTProducto.setColorBorde(new java.awt.Color(0, 51, 51));
        cmbTProducto.setColorFondo(new java.awt.Color(0, 51, 51));
        cmbTProducto.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        cmbTProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTProductoActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(cmbTProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 320, -1));

        cmbProveedor.setMaximumRowCount(4);
        cmbProveedor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escoja una opción", "Agregar" }));
        cmbProveedor.setColorArrow(new java.awt.Color(0, 51, 51));
        cmbProveedor.setColorBorde(new java.awt.Color(0, 51, 51));
        cmbProveedor.setColorFondo(new java.awt.Color(0, 51, 51));
        cmbProveedor.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        cmbProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProveedorActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(cmbProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 320, -1));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carrito-de-compras.png"))); // NOI18N
        btnAgregar.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Agregar a la compra</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnAgregar.setBorderPainted(false);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carrito-de-compras Select.png"))); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 530, 70, 50));
        btnAgregar.getAccessibleContext().setAccessibleDescription("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Cancelar compra</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        btnEditar.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Editar</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar-Select.png"))); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 530, 70, 50));

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nueva Venta_Compra.png"))); // NOI18N
        btnLimpiar.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Limpiar campos</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnLimpiar.setBorderPainted(false);
        btnLimpiar.setContentAreaFilled(false);
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nueva Venta_Compra Select.png"))); // NOI18N
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 530, 70, 50));

        btnNuevaCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nueva Venta_Compra.png"))); // NOI18N
        btnNuevaCompra.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Cancelar Compra/Limpiar</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnNuevaCompra.setBorderPainted(false);
        btnNuevaCompra.setContentAreaFilled(false);
        btnNuevaCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevaCompra.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nueva Venta_Compra Select.png"))); // NOI18N
        btnNuevaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaCompraActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(btnNuevaCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 530, 70, 50));

        btnComprar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Realizar Venta.png"))); // NOI18N
        btnComprar.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Finalizar Compra</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        btnComprar.setBorderPainted(false);
        btnComprar.setContentAreaFilled(false);
        btnComprar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnComprar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Realizar Venta Select.png"))); // NOI18N
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });
        pnlRealizarCompras.add(btnComprar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 530, 70, 50));

        rSPanelsSlider1.add(pnlRealizarCompras, "card5");

        pnlVerCompras.setBackground(new java.awt.Color(255, 255, 255));
        pnlVerCompras.setName("pnlVRealizadas"); // NOI18N
        pnlVerCompras.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBuscarCompras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/search.png"))); // NOI18N
        btnBuscarCompras.setContentAreaFilled(false);
        btnBuscarCompras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarComprasActionPerformed(evt);
            }
        });
        pnlVerCompras.add(btnBuscarCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 40, -1, -1));

        lbltitulo6.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo6.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo6.setText("Compras Realizadas");
        pnlVerCompras.add(lbltitulo6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 50));

        TBVerCompras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBVerCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nombre Empresa", "Nombre distribuidor", "Fecha", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBVerCompras.setAltoHead(40);
        TBVerCompras.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBVerCompras.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBVerCompras.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBVerCompras.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBVerCompras.setComponentPopupMenu(PMVerCompras);
        TBVerCompras.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBVerCompras.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerCompras.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        TBVerCompras.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerCompras.setRowHeight(25);
        jScrollPane7.setViewportView(TBVerCompras);
        if (TBVerCompras.getColumnModel().getColumnCount() > 0) {
            TBVerCompras.getColumnModel().getColumn(0).setResizable(false);
            TBVerCompras.getColumnModel().getColumn(0).setPreferredWidth(30);
            TBVerCompras.getColumnModel().getColumn(3).setResizable(false);
            TBVerCompras.getColumnModel().getColumn(3).setPreferredWidth(50);
            TBVerCompras.getColumnModel().getColumn(4).setResizable(false);
            TBVerCompras.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        pnlVerCompras.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 1170, 490));

        txtNoCompra.setBackground(new java.awt.Color(0, 51, 51));
        txtNoCompra.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        txtNoCompra.setForeground(new java.awt.Color(255, 255, 255));
        txtNoCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoCompraKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoCompraKeyTyped(evt);
            }
        });
        pnlVerCompras.add(txtNoCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 290, -1));

        jLabel29.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 51, 51));
        jLabel29.setText("Fecha:");
        pnlVerCompras.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 60, 80, -1));

        DCFechaCompras.setBackground(new java.awt.Color(0, 51, 51));
        DCFechaCompras.setForeground(new java.awt.Color(255, 255, 255));
        DCFechaCompras.setColorBackground(new java.awt.Color(0, 51, 51));
        DCFechaCompras.setColorButtonHover(new java.awt.Color(0, 51, 51));
        DCFechaCompras.setColorDiaActual(new java.awt.Color(67, 150, 209));
        DCFechaCompras.setColorForeground(new java.awt.Color(0, 51, 51));
        DCFechaCompras.setColorSelForeground(new java.awt.Color(0, 51, 51));
        DCFechaCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        DCFechaCompras.setFuente(new java.awt.Font("Microsoft JhengHei UI Light", 3, 14)); // NOI18N
        pnlVerCompras.add(DCFechaCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 320, -1));

        jLabel30.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 51, 51));
        jLabel30.setText("No Compra:");
        pnlVerCompras.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 130, -1));

        rSPanelsSlider1.add(pnlVerCompras, "card6");

        pnlDetalleCompras.setBackground(new java.awt.Color(255, 255, 255));
        pnlDetalleCompras.setName("pnl4"); // NOI18N
        pnlDetalleCompras.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TBDetalleCompra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBDetalleCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código producto", "Cantidad", "Precio", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBDetalleCompra.setAltoHead(40);
        TBDetalleCompra.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBDetalleCompra.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBDetalleCompra.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBDetalleCompra.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBDetalleCompra.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBDetalleCompra.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBDetalleCompra.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        TBDetalleCompra.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBDetalleCompra.setRowHeight(25);
        jScrollPane8.setViewportView(TBDetalleCompra);

        pnlDetalleCompras.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1170, 480));

        lbltitulo7.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo7.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo7.setText("Detalle de las compras");
        pnlDetalleCompras.add(lbltitulo7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 50));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Atras.png"))); // NOI18N
        jButton1.setToolTipText("<html>\n<head>\n\t<style>\n\t\t #contenido{ \n\t\tbackground: #003333;  /*Se le da un color de fondo*/\n\t\tcolor: white;\t\t  /*Color a la letra*/\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div id=contenido>\n\t\t<h2>Regresar a Compras Realizadas</h2>\n\t\t<!-- <img src=\"Path img\"> -->\n\t</div>\n</body>\n</html>");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnlDetalleCompras.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 40, -1, -1));

        lblTotalDCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        lblTotalDCompras.setForeground(new java.awt.Color(0, 51, 51));
        lblTotalDCompras.setText("Total:");
        pnlDetalleCompras.add(lblTotalDCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 270, -1));

        lblFechaDCompras.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        lblFechaDCompras.setForeground(new java.awt.Color(0, 51, 51));
        lblFechaDCompras.setText("Fecha:");
        pnlDetalleCompras.add(lblFechaDCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 210, -1));

        lblCompraNo.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        lblCompraNo.setForeground(new java.awt.Color(0, 51, 51));
        pnlDetalleCompras.add(lblCompraNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 170, -1));

        rSPanelsSlider1.add(pnlDetalleCompras, "card7");

        pnlNuevoProveedor.setBackground(new java.awt.Color(255, 255, 255));
        pnlNuevoProveedor.setName("pnl2"); // NOI18N
        pnlNuevoProveedor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbltitulo8.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo8.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo8.setText("Agregar Proveedor");
        pnlNuevoProveedor.add(lbltitulo8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 50));

        lblInfoProv.setBackground(new java.awt.Color(0, 51, 51));
        lblInfoProv.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lblInfoProv.setForeground(new java.awt.Color(255, 255, 255));
        lblInfoProv.setText("Registrar");
        lblInfoProv.setOpaque(true);
        pnlNuevoProveedor.add(lblInfoProv, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, 150, 40));

        btnInsertarProveedor.setBackground(new java.awt.Color(0, 51, 51));
        btnInsertarProveedor.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        btnInsertarProveedor.setForeground(new java.awt.Color(255, 255, 255));
        btnInsertarProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/checkmark.png"))); // NOI18N
        btnInsertarProveedor.setBorderPainted(false);
        btnInsertarProveedor.setContentAreaFilled(false);
        btnInsertarProveedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInsertarProveedor.setOpaque(true);
        btnInsertarProveedor.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Checkmark Select.png"))); // NOI18N
        btnInsertarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarProveedorActionPerformed(evt);
            }
        });
        pnlNuevoProveedor.add(btnInsertarProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, 50, 40));

        jLabel34.setBackground(new java.awt.Color(0, 51, 51));
        jLabel34.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Cancelar");
        jLabel34.setOpaque(true);
        pnlNuevoProveedor.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 440, 150, 40));

        btnCancelar.setBackground(new java.awt.Color(0, 51, 51));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cerrar.png"))); // NOI18N
        btnCancelar.setBorderPainted(false);
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setOpaque(true);
        btnCancelar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cerrar Select.png"))); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlNuevoProveedor.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, 50, 40));

        jLabel35.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 51, 51));
        jLabel35.setText("No telefono distribuidor: ");
        pnlNuevoProveedor.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, 270, -1));

        jLabel36.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 51, 51));
        jLabel36.setText("Nombre Empresa: ");
        pnlNuevoProveedor.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 270, -1));

        jLabel37.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 51, 51));
        jLabel37.setText("Nombre Distribuidor: ");
        pnlNuevoProveedor.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 270, -1));

        jLabel38.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 51, 51));
        jLabel38.setText("No telefono empresa: ");
        pnlNuevoProveedor.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 280, 270, -1));

        txtNoTelefonoD.setBackground(new java.awt.Color(0, 51, 51));
        txtNoTelefonoD.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtNoTelefonoD.setForeground(new java.awt.Color(255, 255, 255));
        pnlNuevoProveedor.add(txtNoTelefonoD, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 340, 340, -1));

        txtNombreEmpresa.setBackground(new java.awt.Color(0, 51, 51));
        txtNombreEmpresa.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtNombreEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        pnlNuevoProveedor.add(txtNombreEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, 340, -1));

        txtNombreDistri.setBackground(new java.awt.Color(0, 51, 51));
        txtNombreDistri.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtNombreDistri.setForeground(new java.awt.Color(255, 255, 255));
        pnlNuevoProveedor.add(txtNombreDistri, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 340, -1));

        txtNotelefonoE.setBackground(new java.awt.Color(0, 51, 51));
        txtNotelefonoE.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtNotelefonoE.setForeground(new java.awt.Color(255, 255, 255));
        pnlNuevoProveedor.add(txtNotelefonoE, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 270, 340, -1));

        rSPanelsSlider1.add(pnlNuevoProveedor, "card8");

        pnlVerProv.setBackground(new java.awt.Color(255, 255, 255));
        pnlVerProv.setName("pnl2"); // NOI18N
        pnlVerProv.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TBVerProveedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        TBVerProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre Empresa", "No telefono empresa", "Nombre Distribuidor", "No telefono distribuidor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBVerProveedor.setAltoHead(40);
        TBVerProveedor.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBVerProveedor.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBVerProveedor.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBVerProveedor.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBVerProveedor.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        TBVerProveedor.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerProveedor.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        TBVerProveedor.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerProveedor.setRowHeight(25);
        jScrollPane9.setViewportView(TBVerProveedor);

        pnlVerProv.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 1170, 480));

        lbltitulo9.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 24)); // NOI18N
        lbltitulo9.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo9.setText("Ver Proveedores");
        pnlVerProv.add(lbltitulo9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 50));

        txtEmpresa.setBackground(new java.awt.Color(0, 51, 51));
        txtEmpresa.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        txtEmpresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmpresaKeyPressed(evt);
            }
        });
        pnlVerProv.add(txtEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 400, -1));

        jLabel33.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 51, 51));
        jLabel33.setText("Empresa:");
        pnlVerProv.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 120, -1));

        txtDistribuidor.setBackground(new java.awt.Color(0, 51, 51));
        txtDistribuidor.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtDistribuidor.setForeground(new java.awt.Color(255, 255, 255));
        txtDistribuidor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDistribuidorKeyPressed(evt);
            }
        });
        pnlVerProv.add(txtDistribuidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 50, 380, -1));

        jLabel39.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 51, 51));
        jLabel39.setText("Distribuidor: ");
        pnlVerProv.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, -1, -1));

        rSPanelsSlider1.add(pnlVerProv, "card9");

        pnlVerUsuarios.setBackground(new java.awt.Color(255, 255, 255));
        pnlVerUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        pnlVerUsuarios.setName("pnlVerUsuarios"); // NOI18N
        pnlVerUsuarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBorder(null);
        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        TBVerUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nombres", "Apellidos", "No Teléfono", "Activo", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBVerUsuarios.setColorBackgoundHead(new java.awt.Color(0, 51, 51));
        TBVerUsuarios.setColorFilasBackgound2(new java.awt.Color(0, 51, 51));
        TBVerUsuarios.setColorFilasForeground1(new java.awt.Color(0, 51, 51));
        TBVerUsuarios.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
        TBVerUsuarios.setComponentPopupMenu(PMVerUsuario);
        TBVerUsuarios.setFuenteFilas(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerUsuarios.setFuenteFilasSelect(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerUsuarios.setFuenteHead(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        TBVerUsuarios.setRowHeight(25);
        TBVerUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBVerUsuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TBVerUsuarios);
        if (TBVerUsuarios.getColumnModel().getColumnCount() > 0) {
            TBVerUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
            TBVerUsuarios.getColumnModel().getColumn(0).setMaxWidth(75);
        }

        pnlVerUsuarios.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 1130, 420));

        lbltitulo10.setFont(new java.awt.Font("Microsoft JhengHei UI", 3, 24)); // NOI18N
        lbltitulo10.setForeground(new java.awt.Color(0, 51, 51));
        lbltitulo10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo10.setText("Ver Usuarios");
        lbltitulo10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlVerUsuarios.add(lbltitulo10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 50));

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("Nombre:");
        pnlVerUsuarios.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 100, -1));

        txtNombreUsuario.setBackground(new java.awt.Color(0, 51, 51));
        txtNombreUsuario.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtNombreUsuario.setForeground(new java.awt.Color(255, 255, 255));
        txtNombreUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreUsuarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreUsuarioKeyTyped(evt);
            }
        });
        pnlVerUsuarios.add(txtNombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 360, 40));

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("Apellidos:");
        pnlVerUsuarios.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 80, 100, -1));

        txtApellido.setBackground(new java.awt.Color(0, 51, 51));
        txtApellido.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 3, 18)); // NOI18N
        txtApellido.setForeground(new java.awt.Color(255, 255, 255));
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });
        pnlVerUsuarios.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 360, 40));

        rSPanelsSlider1.add(pnlVerUsuarios, "card11");

        jPanel1.add(rSPanelsSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1200, 600));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        if (!this.btnHome.isSelected()) {
            this.btnHome.setSelected(true);
            this.btnVerVentas.setSelected(false);
            this.btnRealizarCompras.setSelected(false);
            this.btnVerCompras.setSelected(false);
            this.btnNuevoProveedor.setSelected(false);
            this.btnVerProveedor.setSelected(false);
            this.btnAddUser.setSelected(false);
            this.btnVerUsuarios.setSelected(false);
            rSPanelsSlider1.setPanelSlider(10, pnlInventario, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnVerVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerVentasActionPerformed
        if (!this.btnVerVentas.isSelected()) {
            this.btnHome.setSelected(false);
            this.btnVerVentas.setSelected(true);
            this.btnRealizarCompras.setSelected(false);
            this.btnVerCompras.setSelected(false);
            this.btnNuevoProveedor.setSelected(false);
            this.btnVerProveedor.setSelected(false);
            this.btnAddUser.setSelected(false);
            this.btnVerUsuarios.setSelected(false);
            BVentas();
            rSPanelsSlider1.setPanelSlider(10, pnlVerVentas, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_btnVerVentasActionPerformed

    private void btnVerComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerComprasActionPerformed
        if (!this.btnVerCompras.isSelected()) {
            this.btnHome.setSelected(false);
            this.btnVerVentas.setSelected(false);
            this.btnRealizarCompras.setSelected(false);
            this.btnVerCompras.setSelected(true);
            this.btnNuevoProveedor.setSelected(false);
            this.btnVerProveedor.setSelected(false);
            this.btnAddUser.setSelected(false);
            this.btnVerUsuarios.setSelected(false);
            VerCompras();
            rSPanelsSlider1.setPanelSlider(10, pnlVerCompras, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_btnVerComprasActionPerformed

    private void btnRealizarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarComprasActionPerformed
        if (!this.btnRealizarCompras.isSelected()) {
            limpiarCajas();
            btnRegresarInvenrtario1.setVisible(false);
            btnAgregar.setEnabled(true);
            btnEditar.setEnabled(false);
            txtCodigoCompras.setEnabled(true);
            this.btnHome.setSelected(false);
            this.btnVerVentas.setSelected(false);
            this.btnRealizarCompras.setSelected(true);
            this.btnVerCompras.setSelected(false);
            this.btnNuevoProveedor.setSelected(false);
            this.btnVerProveedor.setSelected(false);
            this.btnAddUser.setSelected(false);
            this.btnVerUsuarios.setSelected(false);
            rSPanelsSlider1.setPanelSlider(10, pnlRealizarCompras, RSPanelsSlider.DIRECT.LEFT);
        }

    }//GEN-LAST:event_btnRealizarComprasActionPerformed

    private void btnNuevoProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoProveedorActionPerformed
        if (!this.btnNuevoProveedor.isSelected()) {
            this.btnHome.setSelected(false);
            this.btnVerVentas.setSelected(false);
            this.btnRealizarCompras.setSelected(false);
            this.btnVerCompras.setSelected(false);
            this.btnNuevoProveedor.setSelected(true);
            this.btnVerProveedor.setSelected(false);
            this.btnAddUser.setSelected(false);
            this.btnVerUsuarios.setSelected(false);
            rSPanelsSlider1.setPanelSlider(10, pnlNuevoProveedor, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_btnNuevoProveedorActionPerformed

    private void btnVerProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerProveedorActionPerformed
        rSPanelsSlider1.setPanelSlider(10, pnlVerProv, RSPanelsSlider.DIRECT.LEFT);
        if (!this.btnVerProveedor.isSelected()) {
            this.btnHome.setSelected(false);
            this.btnVerVentas.setSelected(false);
            this.btnRealizarCompras.setSelected(false);
            this.btnVerCompras.setSelected(false);
            this.btnNuevoProveedor.setSelected(false);
            this.btnVerProveedor.setSelected(true);
            this.btnAddUser.setSelected(false);
            this.btnVerUsuarios.setSelected(false);
            VerProveedores();
        }
    }//GEN-LAST:event_btnVerProveedorActionPerformed

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        if (!this.btnAddUser.isSelected()) {
            this.btnHome.setSelected(false);
            this.btnVerVentas.setSelected(false);
            this.btnRealizarCompras.setSelected(false);
            this.btnVerCompras.setSelected(false);
            this.btnNuevoProveedor.setSelected(false);
            this.btnVerProveedor.setSelected(false);
            this.btnAddUser.setSelected(true);
            this.btnVerUsuarios.setSelected(false);
            new Registro().setVisible(true);
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void MIDetVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIDetVentaActionPerformed
        int seleccion = TBVerVentas.getSelectedRow();
        if (seleccion != -1) {
            int id = Integer.parseInt((String) TBVerVentas.getValueAt(seleccion, 0));
            lblFechaDVentas.setText("Fecha: " + TBVerVentas.getValueAt(seleccion, 2));
            lblTotalDVentas.setText("Total: " + TBVerVentas.getValueAt(seleccion, 3));
            lblVentano.setText("No venta: " + id);
            TBDetalleVenta.setModel(venta.getDVentas(id, TBDetalleVenta));
            rSPanelsSlider1.setPanelSlider(10, pnlDetalleVentas, RSPanelsSlider.DIRECT.UP);
        }
    }//GEN-LAST:event_MIDetVentaActionPerformed

    private void btnInsertarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarProveedorActionPerformed
        if (verificarProveedor()) {
            if (proveedor.insertarProveedor(txtNombreEmpresa.getText(), txtNombreDistri.getText(),
                    txtNotelefonoE.getText(), txtNoTelefonoD.getText())) {
                new rojerusan.RSNotifyAnimated("¡ÉXITO!", "Proveedor ingresado correctamente",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                        RSNotifyAnimated.TypeNotify.SUCCESS).setVisible(true);
                for (int i = cmbProveedor.getItemCount() - 1; i > 0; i--) {
                    cmbProveedor.removeItemAt(i);
                }
                cmbProveedor.addItem("Agregar");
                cmbProveedor.setModel(compras.getProveedor((DefaultComboBoxModel) cmbProveedor.getModel()));
                rSPanelsSlider1.setPanelSlider(10, pnlRealizarCompras, RSPanelsSlider.DIRECT.LEFT);
            }
        }
    }//GEN-LAST:event_btnInsertarProveedorActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void MIDetComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIDetComprasActionPerformed
        int seleccion = TBVerCompras.getSelectedRow();
        if (seleccion != -1) {
            int id = Integer.parseInt((String) TBVerCompras.getValueAt(seleccion, 0));
            lblFechaDCompras.setText("Fecha: " + TBVerCompras.getValueAt(seleccion, 3));
            lblTotalDCompras.setText("Total: " + TBVerCompras.getValueAt(seleccion, 4));
            lblCompraNo.setText("No Compra: " + id);
            TBDetalleCompra.setModel(compras.getDCompras(id, TBDetalleCompra));
            rSPanelsSlider1.setPanelSlider(10, pnlDetalleCompras, RSPanelsSlider.DIRECT.UP);
        }
    }//GEN-LAST:event_MIDetComprasActionPerformed
    
    private boolean verificarCantidad(int cantidadIN, int cantidadEx) {
        return cantidadIN <= cantidadEx;
    }

    private void MIAddVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIAddVentaActionPerformed
        int seleccionados[] = TBInventario.getSelectedRows();                                                   //Obtengo el listado de los seleccionados de la tabla
        if (seleccionados.length > 0) {                                                                         //Si el vector es 0 no se selecciono ni uno y va al else de lo contrario entra
            btnRegresarInventario.setSelected(false);                                                           //Se le dice que deje de seleccionar el boton regresar
            String datos[] = new String[8];                                                                     //un array de 8 pos. para tener todos los datos y pasarlos a la otra tabla de ventas
            int respuesta, cont = 0, cantidad;                                                                  //Declaro variables a utilizar
            float subtotal, total;
            boolean aceptado;
            total = txtTotalVenta.getText().equals("") ? 0 : Float.parseFloat(txtTotalVenta.getText());         //Uso un if ternario para asignarle valor a total si lo que regresa el txt total es vacio le da 0 de lo contrario le da el valor que tenga
            DefaultTableModel ModVentas = (DefaultTableModel) TBVentas.getModel();                              //Obtengo el modelo de la tobla ventas
            for (int i = 0; i < seleccionados.length; i++) {                                                    //Itero el array con los seleccionados
                txtCantidadVenta.setText("");                                                                   //Al textfield cantidad le doy un texto vacio
                aceptado = false;                                                                               //Hago falso la variable booleana, esto para poder buscar si el producto ya esta en la otra tabla
                datos[0] = (String) TBInventario.getValueAt(seleccionados[i], 0);                               //Le doy a la pos 0 el id del producto
                for (int j = 0; j < ModVentas.getRowCount(); j++) {                                             //Itero el modelo de ventas
                    if (datos[0] == ModVentas.getValueAt(j, 0)) {                                               //Si el dato seleccionado ya esta en la tabla ventas 
                        aceptado = true;                                                                        //Se le da true a la variable booleana aceptada y se rompe el ciclo
                        break;                                                                                  //Nota hago la comparación con los ID.
                    }
                }
                if (!aceptado) {                                                                                //Si la variable booleana (acptado) es false hace la insercion ala otra tabla de ventas
                    datos[1] = (String) TBInventario.getValueAt(seleccionados[i], 1);                           //Le doy la informacion de la tabla inventario a un array que posteriormente se le dara a la tabla ventas
                    datos[2] = (String) TBInventario.getValueAt(seleccionados[i], 2);
                    datos[3] = (String) TBInventario.getValueAt(seleccionados[i], 3);
                    datos[4] = (String) TBInventario.getValueAt(seleccionados[i], 4);
                    datos[5] = "" + 1000000;                                                                    //A este registro le doy un valor alto para que entre a mi ciclo while declarado mas adelante
                    cantidad = Integer.parseInt((String) TBInventario.getValueAt(seleccionados[i], 5));         //Obtengo la cantidad que tiene mi producto para poder hacer después comparaciones
                    if (cantidad > 0) {                                                                         //Si la cantidad el producto es mayor a 0 entra al if y se termina de pedir los datos
                        while (!verificarCantidad(Integer.parseInt(datos[5]), cantidad)) {                      //cilo while que me ayuda a ver si el mensaje de esta vacio, si escoge la cantidad 0 o si la cantidad que quiere vender es mayor a la cantidad de producto existente 
                            respuesta = JOptionPane.showConfirmDialog(null, txtCantidadVenta, "Ingrese la " //Option Pane para que muestra un text field para que ingrese la cantidad a vender el usuario
                                    + "cantidad del producto: " + datos[2], JOptionPane.OK_CANCEL_OPTION, //Retorna un entero si es 0 acepto el mensaje de lo contrario cerro o cancelo.
                                    JOptionPane.QUESTION_MESSAGE);
                            datos[5] = txtCantidadVenta.getText();                                              //Obtengo la cantidad que ingreso el usuario
                            if (respuesta == 0) {
                                if (!datos[5].equals("") && Integer.parseInt(datos[5]) > 0) {                   //Si lo que ingreso el usuario es nulo y si es 0 muestra un mensaje de lo contrario va a seguir con el proceso de copiar los datos
                                    if (!verificarCantidad(Integer.parseInt(datos[5]), cantidad)) {
                                        new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡No hay demasiado producto!\n"
                                                + "La cantidad de producto existente es: " + cantidad,
                                                5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                                                RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
                                    } else {
                                        datos[6] = (String) TBInventario.getValueAt(seleccionados[i], 6);       //Copio el precio del producto a una posición del array
                                        subtotal = Float.parseFloat(datos[6]) * Integer.parseInt(datos[5]);     //Hago una pequeña multiplicación entre la cantidad* precio
                                        datos[7] = "" + subtotal;                                               //El subtotal lo agrego en otra posición del array
                                        total += subtotal;                                                      //Hago que el total se siga sumando
                                        ModVentas.addRow(datos);                                                //Agrego los datos al model de la tabla ventas
                                        cont++;                                                                 //variable cont que me sirve para ver si por lo menor 1 cumplió con todo y si se agrego alguna fila a la tabla ventas
                                    }
                                } else {
                                    new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡Debes de ingresar una canidad mayor a 0.",
                                            5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                                            RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
                                    datos[5] = "" + 1000000;                                                    //En este caso si mando un texto vacio o 0 le doy otra vez un valor grande solo para que entre a mi ciclo
                                }
                            } else {
                                break;                                                                          //Si no acepto el mensaje o cerro la ventana del Option pane se cierra el ciclo #OJO se cierra el ciclo while no el for de los seleccionados
                            }
                        }
                    } else {
                        new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡No hay demasiado producto!\n"
                                + "La cantidad de producto existente es: " + cantidad,
                                5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                                RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
                    }
                } else {
                    new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡El producto ya fue añadido.!",
                            5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                            RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
                }
            }
            if (cont > 0) {                                                                                     //Si por lo menos hubo | producto que cumplio con todo y se agrego al modelo de la tabla ventas entra al if
                txtTotalVenta.setText("" + total);                                                              //Se le da el total al text field 
                rSPanelsSlider1.setPanelSlider(10, pnlRealizarVentas, RSPanelsSlider.DIRECT.LEFT);              //Se hace el llamado al panel de ventas
            }
        } else {
            new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "Debes de seleccionar al menos 1 fila",
                    5, RSNotifyAnimated.PositionNotify.TopLef, RSNotifyAnimated.AnimationNotify.UpBottom,
                    RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
        }
    }//GEN-LAST:event_MIAddVentaActionPerformed

    private void txtCodigoInventarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoInventarioKeyPressed
        BInventario();                                                                                          //Se llama a la busqueda del inventario cada vez que se preciona una letra en el textfiel del codigo panel inventario
    }//GEN-LAST:event_txtCodigoInventarioKeyPressed

    private void cmbInventarioMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInventarioMarcaActionPerformed
        BInventario();                                                                                          //Se llama a la busqueda del inventario cada vez que se selecciona una marca en el combo box del codigo panel inventario
    }//GEN-LAST:event_cmbInventarioMarcaActionPerformed

    private void cmbInventarioPresentacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInventarioPresentacionActionPerformed
        BInventario();                                                                                          //Se llama a la busqueda del inventario cada vez que se selecciona una Presentacion en el combo box del codigo panel inventario
    }//GEN-LAST:event_cmbInventarioPresentacionActionPerformed

    private void cmbInventarioTProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInventarioTProdActionPerformed
        BInventario();                                                                                          //Se llama a la busqueda del inventario cada vez que se selecciona una tipo de producto en el combo box del codigo panel inventario
    }//GEN-LAST:event_cmbInventarioTProdActionPerformed

    private void txtMontoVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoVentaKeyPressed
        puntoFlotante(evt, txtMontoVenta);
    }//GEN-LAST:event_txtMontoVentaKeyPressed

    private void txtMontoVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoVentaKeyTyped
        puntoFlotante(evt, txtMontoVenta);
    }//GEN-LAST:event_txtMontoVentaKeyTyped

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (VerificarRealizarCompras()) {
            Datos.add(new datosProducto());
            DefaultTableModel modelo = (DefaultTableModel) TBComprar.getModel();
            String codigo = txtCodigoCompras.getText();
            int cantidad = Integer.parseInt(txtCantidad.getText());
            float precio = Float.parseFloat(txtPrecio.getText());
            float costo = Float.parseFloat(txtCosto.getText());
            String detalle = txtDetallePres.getText();
            int marcaId = cmbMarca.getSelectedIndex() - 1;
            int tipoProductoId = cmbTProducto.getSelectedIndex() - 1;
            int proveedorId = cmbProveedor.getSelectedIndex() - 1;
            int presentacionId = cmbPresentacionCompra.getSelectedIndex() - 1;
            float subTotal = cantidad * costo;
            float totalCompra = 0;
            if (txtTotalCompra.getText().length() == 0) {
                totalCompra = subTotal;
            } else {
                totalCompra = Float.parseFloat(txtTotalCompra.getText()) + subTotal;
            }
            String[] datos = new String[4];
            datos[0] = codigo;
            datos[1] = String.valueOf(cantidad);
            datos[2] = String.valueOf(costo);
            datos[3] = String.valueOf(subTotal);
            modelo.addRow(datos);
            txtTotalCompra.setText(String.valueOf(totalCompra));
            btnNuevaCompra.setEnabled(true);
            btnComprar.setEnabled(true);
            //Se agrega la información necesaria al ArrayList
            Datos.get(posicion).setCantidad(cantidad);
            Datos.get(posicion).setCodigo(codigo);
            Datos.get(posicion).setCosto(costo);
            Datos.get(posicion).setDetalle_presentacion(detalle);
            Datos.get(posicion).setMarca_id(marcaId);
            Datos.get(posicion).setPrecio(precio);
            Datos.get(posicion).setPresentacion_id(presentacionId);
            Datos.get(posicion).setProveedor_id(proveedorId);
            Datos.get(posicion).setTipoProducto_id(tipoProductoId);
            posicion++;
            limpiarCompras();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnNuevaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaCompraActionPerformed
        CancelarCompra();
        posicion = 0;
        Datos.clear();
        btnAgregar.setSelected(false);
    }//GEN-LAST:event_btnNuevaCompraActionPerformed

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "¿Finalizar Compra?", "FINALIZAR", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            if (txtMontoCompra.getText().length() == 0) {
                new rojerusan.RSNotifyAnimated("¡ERROR!", "El campo monto no puede estar vacío",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                        RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                txtMontoCompra.requestFocus();
            } else {
                float totalPagar = Float.parseFloat(txtTotalCompra.getText());
                float monto = Float.parseFloat(txtMontoCompra.getText());
                if (monto < totalPagar) {
                    new rojerusan.RSNotifyAnimated("¡ERROR!", "El campo monto no puede ser menor al campo Total a Pagar",
                            5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                            RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                } else {
                    //Si toda ha sigo ingresado correctamente, se ingresa el producto 

                    if (compras.insertarCompra(totalPagar)) {
                        boolean actualizado = btnRegresarInvenrtario1.isVisible();
                        for (int i = 0; i < Datos.size(); i++) {
                            if (!actualizado) {
                                System.out.println("proveedor: " + Datos.get(i).getProveedor_id());
                                producto.insertarProducto(Datos.get(i).getCodigo(), Datos.get(i).getCantidad(),
                                        Datos.get(i).getPrecio(), Datos.get(i).getTipoProducto_id(), Datos.get(i).getProveedor_id(),
                                        Datos.get(i).getMarca_id(), Datos.get(i).getPresentacion_id(),
                                        Datos.get(i).getDetalle_presentacion(), Datos.get(i).getCosto());
                            } else {
                                producto.ActualizarProducto(Datos.get(i).getProducto_id(), Datos.get(i).getCantidad(),
                                        Datos.get(i).getPrecio(), Datos.get(i).getCosto());
                            }
                        }
                        
                        new rojerusan.RSNotifyAnimated("¡ÉXITO!", "Compra realizada correctamente",
                                5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                                RSNotifyAnimated.TypeNotify.SUCCESS).setVisible(true);
                        float vuelto = monto - totalPagar;
                        BigDecimal redondeo = new BigDecimal(vuelto).setScale(2, RoundingMode.HALF_EVEN);
                        btnVueltoCompra.setText(String.valueOf(redondeo));
                        btnComprar.setEnabled(false);
                        btnAgregar.setEnabled(false);
                        //limpiarCajas();
                        posicion = 0;
                        Datos.clear();
                        TBInventario.setModel(inventario.getInventario("", "", "", "", TBInventario));
                    } else {
                        JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnComprarActionPerformed
    
    private void AgregarCmb(RSComboMetro comboCompas, RSComboMetro comboinventario, byte eleccion, String dato) {
        if (dato != null && dato.length() != 0) {
            for (int i = comboinventario.getItemCount() - 1; i > 0; i--) {
                comboinventario.removeItemAt(i);
            }
            comboCompas.removeAllItems();
            comboCompas.addItem("Escoja una opción");
            comboCompas.addItem("Agregar");
            switch (eleccion) {
                case 1:
                    compras.insertarMarca(dato);
                    comboinventario.setModel(inventario.getMarca((DefaultComboBoxModel) comboinventario.getModel()));
                    comboCompas.setModel(inventario.getMarca((DefaultComboBoxModel) comboCompas.getModel()));
                    break;
                case 2:
                    compras.insertarTipoProducto(dato);
                    comboinventario.setModel(inventario.getTProd((DefaultComboBoxModel) comboinventario.getModel()));
                    comboCompas.setModel(inventario.getTProd((DefaultComboBoxModel) comboCompas.getModel()));
                    break;
                case 3:
                    compras.insertarPresentacion(dato);
                    comboinventario.setModel(inventario.getPresentacion((DefaultComboBoxModel) comboinventario.getModel()));
                    comboCompas.setModel(inventario.getPresentacion((DefaultComboBoxModel) comboCompas.getModel()));
                    break;
            }
        }
        
    }
    private void cmbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarcaActionPerformed
        if (cmbMarca.getSelectedItem().equals("Agregar")) {
            String marca = JOptionPane.showInputDialog("Ingresar nueva marca: ");
            AgregarCmb(cmbMarca, cmbInventarioMarca, (byte) 1, marca);
        }
    }//GEN-LAST:event_cmbMarcaActionPerformed

    private void cmbTProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTProductoActionPerformed
        if (cmbTProducto.getSelectedItem().equals("Agregar")) {
            String tipoProducto = JOptionPane.showInputDialog("Ingresar nuevo Tipo de Producto: ");
            AgregarCmb(cmbTProducto, cmbInventarioTProd, (byte) 2, tipoProducto);
        }
    }//GEN-LAST:event_cmbTProductoActionPerformed

    private void cmbPresentacionCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPresentacionCompraActionPerformed
        if (cmbPresentacionCompra.getSelectedItem().equals("Agregar")) {
            String presentacion = JOptionPane.showInputDialog("Ingresar nueva Presentación: ");
            AgregarCmb(cmbPresentacionCompra, cmbInventarioPresentacion, (byte) 3, presentacion);
        }
    }//GEN-LAST:event_cmbPresentacionCompraActionPerformed

    private void cmbProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProveedorActionPerformed
        if (cmbProveedor.getSelectedItem().equals("Agregar")) {
            rSPanelsSlider1.setPanelSlider(10, pnlNuevoProveedor, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_cmbProveedorActionPerformed

    private void MIAddCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIAddCompraActionPerformed
        int[] seleccion = TBInventario.getSelectedRows();
        if (seleccion.length > 0) {
            btnRegresarInvenrtario1.setSelected(false);
            btnEditar.setEnabled(false);
            txtCodigoCompras.setEnabled(false);
            btnComprar.setEnabled(true);
            btnAgregar.setEnabled(false);
            DefaultTableModel modelo = (DefaultTableModel) TBComprar.getModel();
            String registros[] = new String[4];
            for (int i = 0; i < seleccion.length; i++) {
                Datos.add(new datosProducto());
                Datos.get(Datos.size() - 1).setProducto_id(Integer.parseInt((String) TBInventario.getValueAt(seleccion[i], 0)));
                Datos.get(Datos.size() - 1).setCodigo((String) TBInventario.getValueAt(seleccion[i], 2));
                Datos.get(Datos.size() - 1).setPrecio(Float.parseFloat((String) TBInventario.getValueAt(seleccion[i], 6)));
                Datos.get(Datos.size() - 1).setDetalle_presentacion((String) TBInventario.getValueAt(seleccion[i], 4));
                registros[0] = Datos.get(Datos.size() - 1).getCodigo();
                registros[1] = "0";
                registros[2] = "0";
                registros[3] = "0";
                modelo.addRow(registros);
            }
            btnRegresarInvenrtario1.setVisible(true);
            rSPanelsSlider1.setPanelSlider(10, pnlRealizarCompras, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_MIAddCompraActionPerformed

    private void txtCantidadVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadVentaKeyTyped
        Numeros(evt);
    }//GEN-LAST:event_txtCantidadVentaKeyTyped

    private void btnRegresarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarVentasActionPerformed
        limpiarDetVentas_compra(TBDetalleVenta, pnlVerVentas);
    }//GEN-LAST:event_btnRegresarVentasActionPerformed

    private void btnVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenderActionPerformed
        float monto, total, vuelto;
        BigDecimal redondeo;
        if (!btnVender.isSelected()) {
            if (txtMontoVenta.getText().length() != 0) {
                monto = Float.parseFloat(txtMontoVenta.getText());
                total = Float.parseFloat(txtTotalVenta.getText());
                if (monto >= total) {
                    vuelto = (monto - total);
                    redondeo = new BigDecimal(vuelto).setScale(2, RoundingMode.HALF_EVEN);
                    txtVueltoVenta.setText(String.valueOf(redondeo));
                    if (venta.insertarVenta(idUs)) {
                        int id, cantidad;
                        boolean insertados = true;
                        for (int i = 0; i < TBVentas.getRowCount(); i++) {
                            if (insertados) {
                                id = Integer.parseInt((String) TBVentas.getValueAt(i, 0));
                                cantidad = Integer.parseInt((String) TBVentas.getValueAt(i, 5));
                                insertados = venta.insertarDVentas(id, cantidad);
                            } else {
                                break;
                            }
                        }
                        if (insertados) {
                            new rojerusan.RSNotifyAnimated("¡ÉXITO!", "Ventas realizada correctamente",
                                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                                    RSNotifyAnimated.TypeNotify.SUCCESS).setVisible(true);
                            btnVender.setSelected(true);
                        } else {
                            new rojerusan.RSNotifyAnimated("¡ERROR!", "Hubo un error al realizar las ventas",
                                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                        }
                    }
                } else {
                    new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "El monto no puede ser menor al total",
                            5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                            RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                }
            } else {
                new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo \"Monto\" esta vacío",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                        RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                txtMontoVenta.requestFocus();
            }
        }
    }//GEN-LAST:event_btnVenderActionPerformed

    private void btnNuevaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaVentaActionPerformed
        limpiarVentas();
    }//GEN-LAST:event_btnNuevaVentaActionPerformed

    private void MIRegresarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIRegresarVentaActionPerformed
        if (btnRegresarInventario.isSelected()) {
            btnRegresarInventario.setSelected(false);
            rSPanelsSlider1.setPanelSlider(10, pnlRealizarVentas, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_MIRegresarVentaActionPerformed

    private void DCFechaVentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DCFechaVentaMouseClicked

    }//GEN-LAST:event_DCFechaVentaMouseClicked

    private void txtNoVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoVentaKeyPressed
        BVentas();
    }//GEN-LAST:event_txtNoVentaKeyPressed

    private void btnBuscarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVentasActionPerformed
        BVentas();
    }//GEN-LAST:event_btnBuscarVentasActionPerformed

    private void txtNoCompraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoCompraKeyPressed
        VerCompras();
    }//GEN-LAST:event_txtNoCompraKeyPressed

    private void btnBuscarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarComprasActionPerformed
        VerCompras();
    }//GEN-LAST:event_btnBuscarComprasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpiarDetVentas_compra(TBDetalleCompra, pnlVerCompras);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        Numeros(evt);
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        puntoFlotante(evt, txtPrecio);
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtCostoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostoKeyTyped
        puntoFlotante(evt, txtCosto);
    }//GEN-LAST:event_txtCostoKeyTyped

    private void txtMontoCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoCompraKeyTyped
        puntoFlotante(evt, txtMontoCompra);
    }//GEN-LAST:event_txtMontoCompraKeyTyped

    private void txtNoCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoCompraKeyTyped
        Numeros(evt);
    }//GEN-LAST:event_txtNoCompraKeyTyped

    private void txtEmpresaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpresaKeyPressed
        VerProveedores();
    }//GEN-LAST:event_txtEmpresaKeyPressed

    private void txtDistribuidorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDistribuidorKeyPressed
        VerProveedores();
    }//GEN-LAST:event_txtDistribuidorKeyPressed

    private void MIEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIEliminarActionPerformed
        int seleccion = TBComprar.getSelectedRow();
        if (seleccion != -1) {
            float subtotal = Datos.get(seleccion).getCantidad() * Datos.get(seleccion).getCosto();
            float total = txtTotalCompra.getText().equals("") ? 0 : Float.parseFloat(txtTotalCompra.getText());
            txtTotalCompra.setText("" + (total - subtotal));
            Datos.remove(seleccion);
            DefaultTableModel modelo = (DefaultTableModel) TBComprar.getModel();
            modelo.removeRow(seleccion);
            TBComprar.setModel(modelo);
            limpiarCompras();
        }
    }//GEN-LAST:event_MIEliminarActionPerformed

    private void btnRegresarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarInventarioActionPerformed
        if (!this.btnVender.isSelected()) {
            this.btnRegresarInventario.setSelected(true);
            this.MIRegresarVenta.setEnabled(true);
            rSPanelsSlider1.setPanelSlider(10, pnlInventario, RSPanelsSlider.DIRECT.RIGHT);
        } else {
            limpiarVentas();
        }
    }//GEN-LAST:event_btnRegresarInventarioActionPerformed

    private void btnVerUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerUsuariosActionPerformed
        if (!this.btnVerUsuarios.isSelected()) {
            this.btnHome.setSelected(false);
            this.btnVerVentas.setSelected(false);
            this.btnRealizarCompras.setSelected(false);
            this.btnVerCompras.setSelected(false);
            this.btnNuevoProveedor.setSelected(false);
            this.btnVerProveedor.setSelected(false);
            this.btnAddUser.setSelected(false);
            this.btnVerUsuarios.setSelected(true);
            verUsuarios();
            rSPanelsSlider1.setPanelSlider(10, pnlVerUsuarios, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_btnVerUsuariosActionPerformed

    private void MIEditarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIEditarUsuarioActionPerformed
        ActualizarUsuario usuario = new ActualizarUsuario();
        usuario.setVisible(true);
        usuario.buscarUsuario(obtenerId());
    }//GEN-LAST:event_MIEditarUsuarioActionPerformed

    private void txtNombreUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUsuarioKeyTyped
        Letras(evt);
    }//GEN-LAST:event_txtNombreUsuarioKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        Letras(evt);
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtApellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyPressed
        verUsuarios();
    }//GEN-LAST:event_txtApellidoKeyPressed

    private void txtNombreUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUsuarioKeyPressed
        verUsuarios();
    }//GEN-LAST:event_txtNombreUsuarioKeyPressed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked

    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void TBVerUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBVerUsuariosMouseClicked
        int fila = TBVerUsuarios.getSelectedRow();
        String id = ""+(Integer.parseInt((String) TBVerUsuarios.getValueAt(fila, 0))+1);
        setId(id);
    }//GEN-LAST:event_TBVerUsuariosMouseClicked

    private void MIModificarCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIModificarCantidadActionPerformed
        int seleccion = TBVentas.getSelectedRow();
        if (seleccion != -1) {
            DefaultTableModel modelo = (DefaultTableModel) TBVentas.getModel();
            String[] datos = new String[3];
            datos[0] = "" + 100000;
            datos[1] = (String) modelo.getValueAt(seleccion, 0);
            datos[2] = (String) modelo.getValueAt(seleccion, 2);
            modelo = (DefaultTableModel) TBInventario.getModel();
            txtCantidadVenta.setText("");
            int respuesta, cantidad = Integer.parseInt((String) modelo.getValueAt(Integer.parseInt(datos[1]) - 1, 5));
            float total, subtotal;
            BigDecimal redondeo;
            while (!verificarCantidad(Integer.parseInt(datos[0]), cantidad)) {
                respuesta = JOptionPane.showConfirmDialog(null, txtCantidadVenta, "Ingrese la cantidad del producto: " + datos[2], JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                datos[0] = txtCantidadVenta.getText();
                if (respuesta == 0) {
                    if (!datos[0].equals("") && Integer.parseInt(datos[0]) > 0) {
                        if (!verificarCantidad(Integer.parseInt(datos[0]), cantidad)) {
                            new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡No hay demasiado producto!\n"
                                    + "La cantidad de producto existente es: " + cantidad,
                                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                                    RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
                        } else {
                            total = Float.parseFloat(txtTotalVenta.getText()) - Float.parseFloat((String) TBVentas.getValueAt(seleccion, 7));
                            TBVentas.setValueAt(datos[0], seleccion, 5);
                            subtotal = Integer.parseInt(datos[0]) * Float.parseFloat((String) TBVentas.getValueAt(seleccion, 6));
                            TBVentas.setValueAt(subtotal, seleccion, 7);
                            total += subtotal;
                            redondeo = new BigDecimal(total).setScale(2, RoundingMode.HALF_EVEN);
                            txtTotalVenta.setText("" + redondeo);
                        }
                    } else {
                        new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡Debes de ingresar una canidad mayor a 0.\n",
                                5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                                RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
                        datos[0] = "" + 100000;
                    }
                } else {
                    break;
                }
            }
        } else {
            new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡Debes de seleccionar una fila.",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                    RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
        }

    }//GEN-LAST:event_MIModificarCantidadActionPerformed

    private void MIEliminarDeVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIEliminarDeVentasActionPerformed
        int seleccion = TBVentas.getSelectedRow();
        if (seleccion != -1) {
            float total;
            BigDecimal redondeo;
            DefaultTableModel modelo = (DefaultTableModel) TBVentas.getModel();
            String datos = (String) modelo.getValueAt(seleccion, 2);
            int respuesta = JOptionPane.showConfirmDialog(null, "Deseas eliminar el producto: "
                    + datos + " de esta venta?", "Informaión", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (respuesta == 0) {
                if (TBVentas.getRowCount() == 1) {
                    limpiarVentas();
                } else {
                    total = Float.parseFloat(txtTotalVenta.getText()) - Float.parseFloat((String) TBVentas.getValueAt(seleccion, 7));
                    redondeo = new BigDecimal(total).setScale(2, RoundingMode.HALF_EVEN);
                    txtTotalVenta.setText("" + redondeo);
                    modelo.removeRow(seleccion);
                }
                new rojerusan.RSNotifyAnimated("¡ÉXITO!", "Se elimino el producto.",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                        RSNotifyAnimated.TypeNotify.SUCCESS).setVisible(true);
            }
        } else {
            new rojerusan.RSNotifyAnimated("¡INFORMACIÓN!", "¡Debes de seleccionar una fila.",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.RightLeft,
                    RSNotifyAnimated.TypeNotify.INFORMATION).setVisible(true);
        }
    }//GEN-LAST:event_MIEliminarDeVentasActionPerformed

    private void TBComprarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBComprarMouseClicked
        int seleccion = TBComprar.getSelectedRow();
        if (seleccion != -1) {
            btnEditar.setEnabled(true);
            txtCodigoCompras.setText(Datos.get(seleccion).getCodigo());
            txtCantidad.setText("" + Datos.get(seleccion).getCantidad());
            txtPrecio.setText("" + Datos.get(seleccion).getPrecio());
            txtCosto.setText("" + Datos.get(seleccion).getCosto());
            cmbMarca.setSelectedIndex(Datos.get(seleccion).getMarca_id() + 1);
            cmbTProducto.setSelectedIndex(Datos.get(seleccion).getTipoProducto_id() + 1);
            cmbProveedor.setSelectedIndex(Datos.get(seleccion).getProveedor_id() + 1);
            cmbPresentacionCompra.setSelectedIndex(Datos.get(seleccion).getPresentacion_id() + 1);
            txtDetallePres.setText(Datos.get(seleccion).getDetalle_presentacion());
        }
    }//GEN-LAST:event_TBComprarMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCompras();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnRegresarInvenrtario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarInvenrtario1ActionPerformed
        if (btnComprar.isEnabled()) {
            MIRegresarCompras.setEnabled(true);
            btnRegresarInvenrtario1.setSelected(true);
            rSPanelsSlider1.setPanelSlider(10, pnlInventario, RSPanelsSlider.DIRECT.RIGHT);
        } else {
            limpiarCajas();
            txtTotalCompra.setText("");
            txtMontoCompra.setText("");
            btnVueltoCompra.setText("");
            Datos.clear();
            btnAgregar.setEnabled(true);
            rSPanelsSlider1.setPanelSlider(10, pnlInventario, RSPanelsSlider.DIRECT.RIGHT);
        }

    }//GEN-LAST:event_btnRegresarInvenrtario1ActionPerformed

    private void MIRegresarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIRegresarComprasActionPerformed
        if (btnRegresarInvenrtario1.isSelected()) {
            btnRegresarInvenrtario1.setSelected(false);
            rSPanelsSlider1.setPanelSlider(10, pnlRealizarCompras, RSPanelsSlider.DIRECT.LEFT);
        }
    }//GEN-LAST:event_MIRegresarComprasActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int seleccion = TBComprar.getSelectedRow();
        if (seleccion != -1) {
            if (VerificarRealizarCompras()) {
                if (btnRegresarInvenrtario1.isVisible()) {
                    actualizar(seleccion);
                } else {
                    Noactualizar(seleccion);
                }
                limpiarCompras();
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed
    
    private void Noactualizar(int posicion) {
        float total = Float.parseFloat(txtTotalCompra.getText());
        total -= Datos.get(posicion).getCantidad() * Datos.get(posicion).getCosto();
        String codigo = txtCodigoCompras.getText();
        int cantidad = Integer.parseInt(txtCantidad.getText());
        float precio = Float.parseFloat(txtPrecio.getText());
        float costo = Float.parseFloat(txtCosto.getText());
        String detalle = txtDetallePres.getText();
        int marcaId = cmbMarca.getSelectedIndex() - 1;
        int tipoProductoId = cmbTProducto.getSelectedIndex() - 1;
        int proveedorId = cmbProveedor.getSelectedIndex() - 1;
        int presentacionId = cmbPresentacionCompra.getSelectedIndex() - 1;
        float subTotal = cantidad * costo;
        TBComprar.setValueAt(cantidad, posicion, 1);
        TBComprar.setValueAt(costo, posicion, 2);
        TBComprar.setValueAt(subTotal, posicion, 3);
        //Se agrega la información necesaria al ArrayList
        Datos.get(posicion).setCantidad(cantidad);
        Datos.get(posicion).setCodigo(codigo);
        Datos.get(posicion).setCosto(costo);
        Datos.get(posicion).setDetalle_presentacion(detalle);
        Datos.get(posicion).setMarca_id(marcaId);
        Datos.get(posicion).setPrecio(precio);
        Datos.get(posicion).setPresentacion_id(presentacionId);
        Datos.get(posicion).setProveedor_id(proveedorId);
        Datos.get(posicion).setTipoProducto_id(tipoProductoId);
        total += subTotal;
        txtTotalCompra.setText("" + total);
        btnEditar.setEnabled(false);
    }
    
    private void actualizar(int seleccion) {
        String cantidad = txtCantidad.getText();
        float total = (txtTotalCompra == null || txtTotalCompra.getText().equals("")) ? 0 : Float.parseFloat(txtTotalCompra.getText());
        total -= Datos.get(seleccion).getCantidad() * Datos.get(seleccion).getCosto();
        String costo = txtCosto.getText();
        String precio = txtPrecio.getText();
        Datos.get(seleccion).setCantidad(Integer.parseInt(cantidad));
        Datos.get(seleccion).setPrecio(Float.parseFloat(precio));
        Datos.get(seleccion).setCosto(Float.parseFloat(costo));
        String Subtotal = "" + Float.parseFloat(costo) * Integer.parseInt(cantidad);
        TBComprar.setValueAt(cantidad, seleccion, 1);
        TBComprar.setValueAt(costo, seleccion, 2);
        TBComprar.setValueAt(Subtotal, seleccion, 3);
        total += Float.parseFloat(Subtotal);
        txtTotalCompra.setText("" + total);
        btnEditar.setEnabled(false);
    }
    
    private void setId(String id_proyecto) {
        id = id_proyecto;
    }
    
    private String obtenerId() {
        return id;
    }
    
    private boolean verificarProveedor() {
        if (txtNombreEmpresa.getText().length() == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Nombre Empresa vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtNombreEmpresa.requestFocus();
            return false;
        } else if (txtNombreDistri.getText().length() == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Nombre Distribuidor vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtNombreDistri.requestFocus();
            return false;
        } else if (txtNotelefonoE.getText().length() == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Teléfono Empresa vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtNotelefonoE.requestFocus();
            return false;
        } else if (txtNoTelefonoD.getText().length() == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Teléfono Distribuidor vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtNoTelefonoD.requestFocus();
            return false;
        } else {
            return true;
        }
    }
    
    private void CancelarCompra() {
        int n = JOptionPane.showConfirmDialog(null, "¿Cancelar Compra o Limpiar?", "CANCELAR", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            limpiarCajas();
            txtTotalCompra.setText("");
            txtMontoCompra.setText("");
            btnVueltoCompra.setText("");
        }
    }
    
    private void limpiarCajas() {
        limpiarCompras();
        DefaultTableModel modelo = (DefaultTableModel) TBComprar.getModel();
        for (int i = 0; i < TBComprar.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
        Datos.clear();
        MIRegresarCompras.setEnabled(false);
        btnComprar.setEnabled(false);
    }
    
    private void limpiarCompras() {
        txtCodigoCompras.setText("");
        txtCantidad.setText("");
        txtPrecio.setText("");
        txtCosto.setText("");
        txtDetallePres.setText("");
        cmbMarca.setSelectedItem("Escoja una opción");
        cmbTProducto.setSelectedItem("Escoja una opción");
        cmbProveedor.setSelectedItem("Escoja una opción");
        cmbPresentacionCompra.setSelectedItem("Escoja una opción");
    }
    
    private boolean VerificarRealizarCompras() {
        String marca = (String) cmbMarca.getSelectedItem();
        String tProducto = (String) cmbTProducto.getSelectedItem();
        String proveedor = (String) cmbProveedor.getSelectedItem();
        String presentCompra = (String) cmbPresentacionCompra.getSelectedItem();
        if (txtCodigoCompras.getText().length() == 0) {
            txtCodigoCompras.requestFocus();
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Código vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            return false;
        } else if (txtCantidad.getText().length() == 0 || Integer.parseInt(txtCantidad.getText()) == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Cantidad vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtCantidad.requestFocus();
            return false;
        } else if (txtPrecio.getText().length() == 0 || Float.parseFloat(txtPrecio.getText()) == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Precio vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtPrecio.requestFocus();
            return false;
        } else if (txtCosto.getText().length() == 0 || Float.parseFloat(txtCosto.getText()) == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Costo vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtCosto.requestFocus();
            return false;
        } else if (txtDetallePres.getText().length() == 0) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "Campo Detalle de la presentación vacío, por favor llénelo",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtDetallePres.requestFocus();
            return false;
        } else if (Float.parseFloat(txtCosto.getText()) > Float.parseFloat(txtPrecio.getText())) {
            new rojerusan.RSNotifyAnimated("¡ERROR!", "El costo no puede ser mayor al precio",
                    5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                    RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
            txtPrecio.requestFocus();
            return false;
        }
        if (!btnRegresarInvenrtario1.isVisible()) {
            if (marca.equals("Escoja una opción")) {
                new rojerusan.RSNotifyAnimated("¡ERROR!", "Seleccione una marca correcta",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                        RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                cmbMarca.requestFocus();
                return false;
            } else if (tProducto.equals("Escoja una opción")) {
                new rojerusan.RSNotifyAnimated("¡ERROR!", "Seleccione un Tipo de Producto correcto",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                        RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                cmbTProducto.requestFocus();
                return false;
            } else if (proveedor.equals("Escoja una opción")) {
                new rojerusan.RSNotifyAnimated("¡ERROR!", "Seleccione un Proveedor correcto",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                        RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                cmbProveedor.requestFocus();
                return false;
            } else if (presentCompra.equals("Escoja una opción")) {
                new rojerusan.RSNotifyAnimated("¡ERROR!", "Seleccione una Presentación correcta",
                        5, RSNotifyAnimated.PositionNotify.BottomRight, RSNotifyAnimated.AnimationNotify.BottomUp,
                        RSNotifyAnimated.TypeNotify.ERROR).setVisible(true);
                cmbPresentacionCompra.requestFocus();
                return false;
            }
        }
        return true;
        
    }

    //Búsqueda en el panel de inventario.
    private void BInventario() {
        String marca, presentacion, producto;                                                       //Declaro variables a utilizar. Y les asigno valores con if ternarios si dicen ver todo les mando cadena vacio si no lo que este en el combobox.
        marca = cmbInventarioMarca.getSelectedItem().equals("Ver Todo") ? "" : (String) cmbInventarioMarca.getSelectedItem();
        presentacion = cmbInventarioPresentacion.getSelectedItem().equals("Ver Todo") ? "" : (String) cmbInventarioPresentacion.getSelectedItem();
        producto = cmbInventarioTProd.getSelectedItem().equals("Ver Todo") ? "" : (String) cmbInventarioTProd.getSelectedItem();
        TBInventario.setModel(inventario.getInventario(txtCodigoInventario.getText(), presentacion, marca, producto, TBInventario));      //Hago la búsqueda.
    }

    /**
     * Este metodo me sirve para validar los text fiel y que solo deje ingresar
     * numeros
     *
     * @param e
     */
    private void Numeros(KeyEvent e) {
        if ((e.getKeyChar() < '0' || e.getKeyChar() > '9')) {                           //Si no es un numero se va a consumir 
            e.consume();
        }
    }
    
    private void puntoFlotante(KeyEvent e, JTextField txt) {
        if (!Character.isDigit(e.getKeyChar()) && e.getKeyChar() != '.') {
            e.consume();
        }
        if (e.getKeyChar() == '.' && txt.getText().contains(".")) {
            e.consume();
        }
    }
    
    private void Letras(KeyEvent e) {
        char c = e.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {
            e.consume();
        }
    }

    /**
     * Un setter para tener el id del usuario que ingreso.
     *
     * @param idUs
     */
    public void setIdUs(int idUs) {
        this.idUs = idUs;
    }

    /**
     * Metodo que me limpia lo que son las ventas Ya sea cuando termine una
     * venta o cuando quiera limpiar ventas
     */
    private void limpiarVentas() {
        DefaultTableModel modelo = (DefaultTableModel) TBVentas.getModel();                             //Obtengo el modelo de la tabla ventas
        if (modelo.getRowCount() > 1) {                                                                 //Si hay mas de 1 dato entra al if
            for (int i = 0; i < modelo.getRowCount(); i++) {                                            //Itero el modelo para ir eliminando los datos de la tabla
                modelo.removeRow(0);                                                                    //Siempre se va a eliminar el primer dato por eso el 0 ya que se elimina todo
            }
        }
        modelo.removeRow(0);                                                                            //Elimino el ultimo dato ya que no se elimina en el ciclo, o cuando solo es 1 dato
        txtVueltoVenta.setText("");                                                                     //limpio los textfield que estan en el panel de ventas
        txtTotalVenta.setText("");
        txtMontoVenta.setText("");
        BInventario();                                                                                  //Hago una búsqueda a la tabla inventario
        btnVender.setSelected(false);                                                                   //Quito la seleccion en el boton vender para que en una proxima venta este activo
        btnRegresarInventario.setSelected(false);                                                       //Quito la seleccion en el boton vender para que en una proxima venta este activo
        MIRegresarVenta.setEnabled(false);                                                              //Deshabilito el Menu Item para que no pueda regresar al panel de ventas ya que no hay productos
        rSPanelsSlider1.setPanelSlider(10, pnlInventario, RSPanelsSlider.DIRECT.RIGHT);                 //Regreso al panel del inventario
    }

    /**
     * Metodo que sirve para que nos regresen la fecha de los Date Chooser
     * getfecha
     *
     * @param jd
     * @return
     */
    public String getFecha(RSDateChooser jd) {
        if (jd.getDatoFecha() != null) {
            return formato.format(jd.getDatoFecha());
        } else {
            return null;
        }
    }
    
    private void BVentas() {
        if (getFecha(DCFechaVenta) == null) {
            TBVerVentas.setModel(venta.getVentas(txtNoVenta.getText(), "", TBVerVentas));
        } else {
            TBVerVentas.setModel(venta.getVentas(txtNoVenta.getText(), getFecha(DCFechaVenta), TBVerVentas));
        }
    }
    
    private void VerCompras() {
        if (getFecha(DCFechaCompras) == null) {
            TBVerCompras.setModel(compras.getCompras(txtNoCompra.getText(), "", TBVerCompras));
        } else {
            TBVerCompras.setModel(compras.getCompras(txtNoCompra.getText(), getFecha(DCFechaCompras), TBVerCompras));
        }
    }
    
    public void verUsuarios() {
        if ((txtNombreUsuario.getText().length() == 0) && txtApellido.getText().length() == 0) {
            TBVerUsuarios.setModel(user.getUsuarios("", "", TBVerUsuarios));
        } else {
            TBVerUsuarios.setModel(user.getUsuarios(txtNombreUsuario.getText(), txtApellido.getText(), TBVerUsuarios));
        }
    }
    
    private void VerProveedores() {
        if ((txtEmpresa.getText().length() == 0) && txtDistribuidor.getText().length() == 0) {
            TBVerProveedor.setModel(proveedor.getProveedores("", "", TBVerProveedor));
        } else {
            TBVerProveedor.setModel(proveedor.getProveedores(txtEmpresa.getText(), txtDistribuidor.getText(), TBVerProveedor));
        }
    }

    /**
     * Limpia las tablas de los detalles para eso se le manda parametros la
     * tabla y a cuál panel se tiene que mover.
     *
     * @param table
     * @param panel
     */
    private void limpiarDetVentas_compra(RSTableMetro table, JPanel panel) {
        DefaultTableModel modelo = (DefaultTableModel) table.getModel();
        if (modelo.getRowCount() != 0) {
            for (int i = 0; i < modelo.getRowCount(); i++) {
                modelo.removeRow(0);
            }
            modelo.removeRow(0);
        }
        rSPanelsSlider1.setPanelSlider(10, panel, RSPanelsSlider.DIRECT.DOWN);
    }
    
    private final SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
    private int idUs;
    private ArrayList<datosProducto> Datos;
    private int posicion = 0;
    private final Ventas venta;
    private final Inventario inventario;
    private final Compras compras;
    private final Proveedor proveedor;
    private final Producto producto;
    private final Usuario user;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.componentes.RSDateChooser DCFechaCompras;
    private rojeru_san.componentes.RSDateChooser DCFechaVenta;
    private javax.swing.JMenuItem MIAddCompra;
    private javax.swing.JMenuItem MIAddVenta;
    private javax.swing.JMenuItem MIDetCompras;
    private javax.swing.JMenuItem MIDetVenta;
    private javax.swing.JMenuItem MIEditarUsuario;
    private javax.swing.JMenuItem MIEliminar;
    private javax.swing.JMenuItem MIEliminarDeVentas;
    private javax.swing.JMenuItem MIModificarCantidad;
    private javax.swing.JMenuItem MIRegresarCompras;
    private javax.swing.JMenuItem MIRegresarVenta;
    private javax.swing.JMenu MnAgregarInventario;
    private javax.swing.JMenu MnOpcionesCompras;
    private javax.swing.JMenu MnOpcionesRCompras;
    private javax.swing.JMenu MnOpcionesUsuario;
    private javax.swing.JMenu MnOpcionesVentas;
    private javax.swing.JMenu MnRegresarInventario;
    private javax.swing.JMenu MnVentas;
    private javax.swing.JPopupMenu PMCompras;
    private javax.swing.JPopupMenu PMInventario;
    private javax.swing.JPopupMenu PMVentas;
    private javax.swing.JPopupMenu PMVerCompras;
    private javax.swing.JPopupMenu PMVerUsuario;
    private javax.swing.JPopupMenu PMVerVentas;
    private javax.swing.JPanel PnlControl;
    private rojerusan.RSTableMetro TBComprar;
    private rojerusan.RSTableMetro TBDetalleCompra;
    private rojerusan.RSTableMetro TBDetalleVenta;
    private rojerusan.RSTableMetro TBInventario;
    private rojerusan.RSTableMetro TBVentas;
    private rojerusan.RSTableMetro TBVerCompras;
    private rojerusan.RSTableMetro TBVerProveedor;
    private rojerusan.RSTableMetro TBVerUsuarios;
    private rojerusan.RSTableMetro TBVerVentas;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscarCompras;
    private javax.swing.JButton btnBuscarVentas;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnInsertarProveedor;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevaCompra;
    private javax.swing.JButton btnNuevaVenta;
    private javax.swing.JButton btnNuevoProveedor;
    private javax.swing.JButton btnRealizarCompras;
    private javax.swing.JButton btnRegresarInvenrtario1;
    private javax.swing.JButton btnRegresarInventario;
    private javax.swing.JButton btnRegresarVentas;
    private javax.swing.JButton btnVender;
    private javax.swing.JButton btnVerCompras;
    private javax.swing.JButton btnVerProveedor;
    private javax.swing.JButton btnVerUsuarios;
    private javax.swing.JButton btnVerVentas;
    private javax.swing.JTextField btnVueltoCompra;
    private rojerusan.RSComboMetro cmbInventarioMarca;
    private rojerusan.RSComboMetro cmbInventarioPresentacion;
    private rojerusan.RSComboMetro cmbInventarioTProd;
    private rojerusan.RSComboMetro cmbMarca;
    private rojerusan.RSComboMetro cmbPresentacionCompra;
    private rojerusan.RSComboMetro cmbProveedor;
    private rojerusan.RSComboMetro cmbTProducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblCompraNo;
    private rojeru_san.RSLabelFecha lblFecha;
    private javax.swing.JLabel lblFechaDCompras;
    private javax.swing.JLabel lblFechaDVentas;
    private javax.swing.JLabel lblInfoProv;
    private javax.swing.JLabel lblTotalDCompras;
    private javax.swing.JLabel lblTotalDVentas;
    private javax.swing.JLabel lblVentano;
    private javax.swing.JLabel lbltitulo;
    private javax.swing.JLabel lbltitulo1;
    private javax.swing.JLabel lbltitulo10;
    private javax.swing.JLabel lbltitulo2;
    private javax.swing.JLabel lbltitulo3;
    private javax.swing.JLabel lbltitulo4;
    private javax.swing.JLabel lbltitulo5;
    private javax.swing.JLabel lbltitulo6;
    private javax.swing.JLabel lbltitulo7;
    private javax.swing.JLabel lbltitulo8;
    private javax.swing.JLabel lbltitulo9;
    private javax.swing.JPanel pnlDetalleCompras;
    private javax.swing.JPanel pnlDetalleVentas;
    private javax.swing.JPanel pnlInventario;
    private javax.swing.JPanel pnlNuevoProveedor;
    private javax.swing.JPanel pnlRealizarCompras;
    private javax.swing.JPanel pnlRealizarVentas;
    private javax.swing.JPanel pnlVerCompras;
    private javax.swing.JPanel pnlVerProv;
    private javax.swing.JPanel pnlVerUsuarios;
    private javax.swing.JPanel pnlVerVentas;
    private rojerusan.RSPanelsSlider rSPanelsSlider1;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCantidadVenta;
    private javax.swing.JTextField txtCodigoCompras;
    private javax.swing.JTextField txtCodigoInventario;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDetallePres;
    private javax.swing.JTextField txtDistribuidor;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtMontoCompra;
    private javax.swing.JTextField txtMontoVenta;
    private javax.swing.JTextField txtNoCompra;
    private javax.swing.JTextField txtNoTelefonoD;
    private javax.swing.JTextField txtNoVenta;
    private javax.swing.JTextField txtNombreDistri;
    private javax.swing.JTextField txtNombreEmpresa;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtNotelefonoE;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTotalCompra;
    private javax.swing.JTextField txtTotalVenta;
    private javax.swing.JTextField txtVueltoVenta;
    // End of variables declaration//GEN-END:variables
}
